sudo apt-get update && sudo apt-get upgrade -y
sudo apt-get dist-upgrade -y
sudo apt-get autoremove && sudo apt-get autoclean
sudo apt install openssh-server
sudo nano /etc/ssh/sshd_config
sudo reboot
mkdir .ssh
chmod 0700 ~/.ssh
touch ~/.ssh/authorized_keys
sudo nano ~/.ssh/authorized_keys
chmod 0644 ~/.ssh/authorized_keys
sudo reboot
sudo raspi-config
sudo systemctl enable vncserver-x11-serviced.service
sudo update-rc.d vncserver-x11-serviced defaults
sudo raspi-config
sudo nano /boot/config.txt
sudo reboot
cpu=$(</sys/class/thermal/thermal_zone0/temp)
echo $cpu
echo "$((cpu/1000))'C"
cpu=$(</sys/class/thermal/thermal_zone0/temp)
echo "$((cpu/1000))'C"
cpu=$(</sys/class/thermal/thermal_zone0/temp)
echo "$((cpu/1000))'C"
cpu=$(</sys/class/thermal/thermal_zone0/temp)
echo "$((cpu/1000))'C"
watch -n1 vcgencmd measure_clock arm
watch -n1 vcgencmd measure_temp
sudo usermod -aG video bruce
watch -n1 vcgencmd measure_clock arm
cpu=$(</sys/class/thermal/thermal_zone0/temp)
echo "$((cpu/1000))'C"
clear
sudo nano /etc/resolv.conf
sudo reboot
sudo watch -n1 vcgencmd measure_temp
sudo watch -n1 vcgencmd measure_clock arm
sudo nano /etc/resolv.conf
chattr +i/etc/resolv.conf
sudo chattr +i/etc/resolv.conf
sudo chattr +i /etc/resolv.conf
sudo nano /etc/resolv.conf
sudo reboot
sudo watch -n1 vcgencmd measure_clock arm
sudo nano /etc/resolv.conf
sudo watch -n1 vcgencmd measure_temp
apt -y install openvpn unzip wget curl openresolv 
sudo apt -y install openvpn unzip wget curl openresolv 
cd /etc/openvpn/client
mkdir certs-available
sudo mkdir certs-available
whoami
sudo mkdir confs-available
sudo mkdir login-available
sudo mkdir certs-enabled
sudo mkdir login-enabled
sudo mkdir vpn-bundles
cd /etc/openvpn/client/vpn-bundles
wget https://www.privateinternetaccess.com/openvpn/openvpn.zip
sudo wget https://www.privateinternetaccess.com/openvpn/openvpn.zip
sudo unzip openvpn.zip -d "$(date +"%d-%m-%Y")"-PIA-openvpn
sudo cd "$(date +"%d-%m-%Y")"-PIA-openvpn
cd "$(date +"%d-%m-%Y")"-PIA-openvpn
sudo mkdir /etc/openvpn/client/certs-available/PIA
cp *.crt /etc/openvpn/client/certs-available/PIA/
sudo cp *.crt /etc/openvpn/client/certs-available/PIA/
sudp cp *.pem /etc/openvpn/client/certs-available/PIA/
sudo cp *.pem /etc/openvpn/client/certs-available/PIA/
sudp mkdir /etc/openvpn/client/confs-available/PIA
sudo mkdir /etc/openvpn/client/confs-available/PIA
sudo cp *.ovpn /etc/openvpn/client/confs-available/PIA/
cd /etc/openvpn/client/confs-available/PIA
sudo sed -i 's/auth-user-pass/auth-user-pass \/etc\/openvpn\/client\/login-enabled\/login/g' *.ovpn
sudo script-security 2
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf
touch add_vpn_settings.sh
sudo nano add_vpn_settings.sh 
chmod +x add_vpn_settings.sh
./add_vpn_settings.sh
sudo ./add_vpn_settings.sh
cd /etc/openvpn
sudo mv update-resolv-conf update-resolv-conf-ORIG
cd /etc/openvpn
sudo wget https://github.com/masterkorp/openvpn-update-resolv-conf/raw/master/update-resolv-conf.sh
sudo mv update-resolv-conf.sh update-resolv-conf
sudo chown root:root update-resolv-conf
sudo chmod 555 update-resolv-conf
cd /etc/openvpn/client/login-available
echo "p1571482" > PIA-Login
sudo echo "p1571482" > PIA-Login
ll
ls -lat
touch PIA-Login
sudo touch PIA-Login
sudo nano PIA-Login 
sudo ln -s /etc/openvpn/client/login-available/PIA-Login /etc/openvpn/client/login-enabled/login
cd /etc/openvpn/client
ll
ls -lat
cd confs-available/
ls -lat
cd PIA/
ls -lat
ln -s /etc/openvpn/client/confs-available/PIA/US\ New\ York\ City.ovpn /etc/openvpn/default.conf
sudo ln -s /etc/openvpn/client/confs-available/PIA/US\ New\ York\ City.ovpn /etc/openvpn/default.conf
sudo reboot
sudo ls -la /root
sudo visudo
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install apt-transport-https
ls -lat
mkdir _temp
cd _temp/
curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list
sudo apt-get update
ls -lat
cd ..
sudo nano /etc/default/openvpn 
cd /etc
ls -lat
cd openvpn/
ls -lat
sudo nano update-resolv-conf-ORIG 
cd client/
ls -lat
sudo nano /etc/resolv.conf
sudo killall openvpn
cd ~/_temp
sudo apt-get update
curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list
sudo apt-get update
sudo apt-get install plexmediaserver
sudo nano /etc/default/plexmediaserver
sudo systemctl restart plexmediaserver
hostname -I
sudo nano /boot/cmdline.txt
sudo reboot
sudo fdisk -l
sudo unmount /dev/sda
sudo umount /dev/sda
sudo umount /dev/sda1
sudo umount /dev/sda2
cd /media
ls -lat
cd bruce/
ls -lat
sudo unmount /media/bruce/MEDIA
sudo umount /media/bruce/MEDIA
sudo fdisk -l
sudo fdisk /dev/sda1
sudo fdisk /dev/sdb
sudo fdisk /dev/sda
sudo fdisk -l
sudo mkfs -t vfat -I /dev/sda1
cd -
mkdir 64GB
sudo mkdir 64GB
sudo mount /dev/sda1 64GB -o umask=000
cd -
sudo umount 64GB
cd _
cd -
ls -lat
sudo umount 64GB
ls -lat
sudo rm 64GB
sudo rm -rf 64GB
ls -lat
cd bruce
sudo mkdir 64GB
sudo mount /dev/sda1 64GB -o umask=000
sudo umount 64GB
sudo umount 3B0B-1DD0
sudo mount /dev/sda1 64GB -o umask=000
sudo fdisk -l
ls -lat
cd 64GB/
ls -lat
cd ls -lat
cd Movies/
ls -lat
cd Skyfall/
ls -lat
cd -
ls -lat
cd /meida
cd /media
ls

ls
sudo umount 3B0B-1DD0
sudo mount /dev/sda1 64GB -o umask=000
ls
cd 64GB/
ls
cd Movies/
ls
cd Skyfall/
cd -
cd ~
sudo umount 64GB
sudo fdisk -l
cd /media
ls
cd bruce/
ls
sudo umount 64GB
ls
cd ..
cd bruce/
rm -rf 64GB/
sudo rm -rf 64GB/
cd ..
sudo mkdir 64GB
cd /boot
ll
ls 
sudo nano config.txt 
sudo reboot
sudo blkid
sudo killall openvpn
sudo nano /etc/apt/sources.list
cd /etc/apt/
ls -lat
cd sources.list.d/
ls -lat
sudo nano plexmediaserver.list
sudo nano raspi.list 
sudo nano plexmediaserver.list.dpkg-old 
sudo echo deb http://http.us.debian.org/debian/pool/main/f/firefox/firefox_68.0.2-3_amd64.deb public main | sudo tee /etc/apt/sources.list.d/firefox.list
ls
sudo nano firefox.list 
sudo apt-get update
sudo nano firefox.list 
sudo apt-get update
sudo rm firefox.list 
sudo apt-get update
ls -lat
cd ..
ls -lat
sudo nano sources.list
cd /media
cd ~
ls -lat
sudo touch .bash_aliases
sudo nano .bash_aliases 
. ~/.bashrc
ll
cd /media/
ll
cd /etc
ll
sudo cp /etc/fstab /etc/fstab.old
sudo gedit /etc/fstab
sudo nano /etc/fstab
sudo blkid
sudo nano /etc/fstab
man fstab
sudo blkid
cd /etc
sudo nano fstab
sudo reboot
cd /etc/group
sudo nano /etc/group
sudo nano /etc/fstab
sudo reboot
sudo blkid
sudo dd if=/dev/mmcblk0 of=/dev/sdf bs=64K conv=noerror,sync
sudo blkid
sudo fdisk /dev/sdf
sudo blkid
sudo dd if=/dev/mmcblk0 of=/dev/sdf bs=64K conv=noerror,sync
cd ~/bin
cd ~/
sudo mkdir bin
cd bin
touch dpkg
cd ~
ll
cd bin
cd ..
sudo add-apt-repository ppa:oguzhaninan/stacer -y
sudo dpkg -i stacer_1.1.0_amd64.deb
sudo apt-get install software-properties-common
sudo add-apt-repository ppa:oguzhaninan/stacer -y
man fdisk
sudo blkid
cd /media/
ll
mkdir "LaCie 2TB"
mkdir LaCie
sudo mkdir "LaCie 2TB"
ll
sudo rm -rf  'LaCie 2TB'
ll
sudo mkdir 2TB
ll
sudo nano /etc/fstab
sudo umount 64GB
sudo blkid
fdisk
fdsik /dev/sda2
sudo fdisk /dev/sda2
sudo apt-get install gparted
sudo apt-get install ntfs-3g
df -h
sudo blkid
sudo umount /dev/sda2
sudo mkntfs --fast --label LaCie /dev/sda1
sudo blkid
sudo mkntfs --fast --label LaCie /dev/sda
sudo blkid
sudo umount 53705C0E26545039
ll
sudo blkid
sudo nano /etc/fstab
sudo reboot
sudo blkid
sudo nano /etc/fstab
sudo reboot
sudo apt-get update
sudo apt-get upgrade
watch -n1 vcgencmd measure_clock arm
cd /etc
ll
cd apt/
ll
sudo nano sources.list
cd sources.list.d/
ll
sudo nano plexmediaserver.list
sudo nano plexmediaserver.list.dpkg-old 
sudo nano plexmediaserver.list
ll
cd Downloads/
ll
dpkg -l | more
dpkg plex
sudo apt-get update plexmediaserver
clear
sudo apt update
sudo apt upgrade
sudo systemctl restart plexmediaserver
sudo apt update
sudo apt upgrade
sudo apt update
ll
sudo apt update
rm plexmediaserver_1.16.5.1554-1e5ff713d_armhf.deb 
ll
sudo dpkg -i plexmediaserver_1.16.6.1559-a71394a45_armhf.deb 
sudo apt-get install -f
sudo systemctl restart plexmediaserver
sudo blkid
sudo umount 9C1C6B471C6B1B90
sudo systemctl stop plexmediaserver
sudo systemctl list
sudo systemctl -l
cd /media
ll
mkdir 1TB
sudo mkdir 1TB
sudo blkid
sudo nano /etc/fstab
sudo reboot
nmcli dev show | grep DNS
nm-tool | grep DNS
nslookup google.com
systemd-resolve --status
cat /etc/rsolv.conf
cat /etc/resolv.conf
ip a
ip route show
ip a 192.168.1.111
ethtool eth0
service networking restart
ping -c 8.8.8.8
sudo ping -c 8.8.8.8
ip addr
ip -i
ip -A
ip -d
ip
ip -I
ip -d
apt install -y xvfb python3-pip firefox 
sudo nano /etc/sudoers.d/010_pi-nopasswd
sudo su
sudo nano /etc/ssh/sshd_config 
sudo apt update
sudo apt upgrade
sudo awk -F: '($2 == "") {print}' /etc/shadow
sudo nano /etc/ssh/sshd_config 
sudo apt install ufw
sudo ufw allow 2048
sudo ufw enable
sudo ufw deny
sudo ufw allow 32400
sudo ufw disable
sudo lsof -i -P -n | grep LISTEN
sudo ufw enable
sudo ufw allow 5900
sudo ufw allow 32401
sudo ufw allow 32600
sudo ufw allow 35443
sudo ufw status
sudo kill 26626
sudo ufw allow 45627
sudo ufw status
sudo apt install fail2ban
sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
sudo nano /etc/fail2ban/jail.local
faillog -a
cd /media/
ll
cd 1TB/
ll
sudo mkdir ISO
cd ISO/
sudo mkdir Movies
sudo mkdir Tv\ Shows
cd TV\ Shows/
sudo mkdir Scooby\ Doo
sudo systemctl restart plexmediaserver
cd ..
cd TV\ Shows/
cd What\'s\ New\,\ Scooby-Doo\?/
sudo mkdir Season\ 01
cd Season\ 01/
cd ..
cd Movies/
sudo mkdir Thomas
cd -
cd ~
sudo systemctl restart plexmediaserver
cd /media/
cd 1TB/
cd Movies/
cd Thomas\ \&\ Friends\ Spills\ and\ Thrills/
ll
sudo rm Thomas-Spills-And-Thrills.mkv 
cd ..
ls
ll
scp -r Tigger abbott@192.168.1.208:~/Desktop/Ripped
btrfs fi df /media/1TB
df -H
sudo apt install gnupg ca-certificates
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
sudo apt update
sudo apt upgrade
sudo apt install mono-devel
ll
sudo mkdir code
cd code
cd ..
ll
cd _temp/
ll
cd ..
cd code/
sudo mkdir _temp
cd _temp/
sudo touch hello.cs
sudo nano hello.cs 
csc hello.cs
sudo csc hello.cs
mono hello.exe
csharp -e 'new System.Net.WebClient ().DownloadString ("https://www.nuget.org")'
apt update && apt install curl mediainfo
sudo apt update && apt install curl mediainfo
sudo su
sudo ufw allow 7878
sudo nano /etc/systemd/system/radarr.service
sudo systemctl enable radarr
sudo service radarr start
sudo reboot
sudo apt upgrade
cd /tmp/
ll
wget https://github.com/Radarr/Radarr/releases/download/v0.2.0.1358/Radarr.develop.0.2.0.1358.linux.tar.gz
sudo tar -xf Radarr* -C /opt/
sudo chown -R bruce:bruce /opt/Radarr
cd /opt/Radarr
mono Radarr.exe
sudo ufw allow 8112
sudo apt install mono-complete nuget msbuild dotnet-sdk-2.2 
cd /tmp
ll
cd ~
ll
export NODEJS_HOME=/opt/node-v10.1.0-linux-x64/bin
ll
sudo nano .profile 
reload
dotnet --help
reload
dotnet --help
echo $path
echo $PATH
reload
echo $PATH
dotnet --help
reload
dotnet --help
sudo ln -s /opt/dotnet/dotnet /usr/local/bin
reload
dotnet --help
cd /opt/
ll
git clone https://github.com/Jackett/Jackett.git
sudo git clone https://github.com/Jackett/Jackett.git
ll
cd Jackett/src
l
ll
dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug 
sudo dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug 
sudo reboot
cd ~
cd /tmp/
ll
wget https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-2.2.401-linux-arm32-binaries
ll
rm dotnet-sdk-2.2.401-linux-arm32-binaries 
wget https://download.visualstudio.microsoft.com/download/pr/3cb1d917-19cc-4399-9a53-03bb5de223f6/be3e011601610d9fe0a4f6b1962378ea/dotnet-sdk-2.2.401-linux-arm.tar.gz
sudo tar -xf dotnet* -C /opt/
sudo chown -R bruce:bruce /opt/dotnet
cd /opt/
ll
cd Radarr/
ll
cd ..
ll
rm dotnet 
sudo rm dotnet 
cd /tmp/
ll
sudo rm dotnet-sdk-2.2.401-linux-arm.tar.gz 
wget https://download.visualstudio.microsoft.com/download/pr/3cb1d917-19cc-4399-9a53-03bb5de223f6/be3e011601610d9fe0a4f6b1962378ea/dotnet-sdk-2.2.401-linux-arm.tar.gz
sudo tar -xf dotnet-sdk-2.2* -C /opt/
cd /opt/
ll
cd dot
ll
sudo rm dotnet 
cd /tmp/
ll
sudo rm dotnet-sdk-2.2.401-linux-arm.tar.gz 
sudo mkdir -p /opt/dotnet
sudo tar zxf dotnet.tar.gz -C /opt/dotnet
curl -sSL -o dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/3cb1d917-19cc-4399-9a53-03bb5de223f6/be3e011601610d9fe0a4f6b1962378ea/dotnet-sdk-2.2.401-linux-arm.tar.gz
sudo tar zxf dotnet.tar.gz -C /opt/dotnet
cd /opt/
ll
cd dotnet/
ll
cd sdk/
ll
cd 2.2.401/
ll
cd ..
ll
cd shared/
ll
cd ..
cd host/
ll
cd ..
ll
reload
cd sdk/
ll
cd 2.2.401/
ll
sudo apt install mono-complete nuget msbuild
sudo ufw disable
sudo su
ll
sudo dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug
cd /opt/
ll
cd Jackett/
cd src/
ll
sudo dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug
./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
sudo ./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
cd ./Jackett.Server/bin/Debug
ll
cd netcoreapp2.2/
ll
cd linux-x64/
ll
cd publish/
ll
cd ..
ll
sudo reboot
sudo ./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
cd /opt/
cd Jackett/
ll
cd src/
ll
cd ./Jackett.Server/bin/Debug/
ll
cd netcoreapp2.2/
ll
cd linux-x64/
ll
sudo ./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
sudo ufw status
sudo dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug
cd ..
sudo dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug
sudo ./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
sudo ./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
sudo apt update
sudo apt install snapd
sudo reboot
reload
sudo snap install hello-world
sudo snap install dotnet-sdk --classic
snap install hello-world
sudo snap install hello-world
su root
sudo su
cd /opt
ll
sudo chown -R bruce:bruce /opt/jackett
sudo chown -R bruce:bruce /opt/Jackett
reload
cd Jackett/
cd src/
sudo dotnet publish Jackett.Server -f netcoreapp2.2 --self-contained -r linux-x64 -c Debug
./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
sudo ./Jackett.Server/bin/Debug/netcoreapp2.2/linux-x64/jackett
cd ..
ll
sudo rm -rf dotnet/
sudo rm -rf Jackett/
sudo apt-get install libcurl4-openssl-dev bzip2 -y
sudo reboot
cd _temp/
ll
ll
cd _temp/
sudo touch dotnet-install.sh
sudo chown -R bruce:bruce ~/_temp/dotnet-install.sh 
reload
./dotnet-install.sh -c Current
sudo ./dotnet-install.sh -c Current
sudo dotnet-install.sh -c Current
ll
sudo chmod a+x dotnet-install.sh 
./dotnet-install.sh -c Current
cd /tmp
jackettver=$(wget -q https://github.com/Jackett/Jackett/releases/latest -O - | grep -E \/tag\/ | awk -F "[><]" '{print $3}')
wget -q https://github.com/Jackett/Jackett/releases/download/$jackettver/Jackett.Binaries.Mono.tar.gz
ll
tar -xvf Jackett*
sudo wget -q https://github.com/Jackett/Jackett/releases/download/$jackettver/Jackett.Binaries.Mono.tar.gz
echo $jackettver
sudo wget -q https://github.com/Jackett/Jackett/releases/download/v0.11.665/Jackett.Binaries.LinuxARM32.tar.gz
ll
sudo tar -xf Jackett* -C /tmp
ll
sudo mkdir /opt/jackett
sudo mv Jackett/* /opt/jackett
sudo chown -R bruce:bruce /opt/jackett
sudo mono /opt/jackett/JackettConsole.exe
cd /opt/jackett/
ll
sudo ./install_service_systemd.sh
sudo reboot
cd /tmp
ll
systemctl list-units 
systemctl | grep running
systemctl start jackett.service
sudo systemctl start jackett.service
systemctl | grep running
sudo ufw enable
sudo ufw allow 9117
df -H
sudo nano /etc/apt/sources.list
sudo apt get update
sudo apt update
curl https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import
sudo curl https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import
gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -
sudo gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -
sudo su
apt update
sudo apt update
sudo apt install tor deb.torproject.org-keyring
sudo apt upgrade
sudo reboot
cd /top
cd /opt
cd tor-browser_en-US/
./start-tor-browser.desktop --register-app
cd ..
ll
sudo passwd openvpn
gpg --gen-key
pass init 74A93FDE25FB61F5
pass
pass insert Media/usenet-crawler
pass Media/usenet-crawler 
pass insert Media/nzbGeek
pass insert Media/deluge-web
service --status-all | grep tor
service --status-all
sudo service tor stop
service --status-all
cd /home/bruce/Downloads/
ll
tar -xJvpf tor-browser-linux32-8.5.5_en-US.tar.xz 
ll
cd tor-browser_en-US/
ll
cd Browser/
ll
cd ..
sudo mv tor-browser_en-US /opt
ll
cd /opt/
ll
cd tor-browser_en-US/
ls
sudo ./start-tor-browser.desktop --register-app
cd ..
sudo rm -rf tor-browser_en-US/
cd /media/
cd 1TB/
cd Movies/
scp -r Collateral abbott@192.168.1.208:~/Desktop/Ripped
scp -r Dark\ Knight/ abbott@192.168.1.208:~/Desktop/Ripped
sudo systemctl status tor
sudo systemctl start tor
sudo systemctl status tor
sudo netstat -ltnp | grep "tor"
sudo systemctl status pia
service --status-all
sudo service openvpn stop
man openvpn
cd /etc/openvpn/
ll
cd client/
ll
cd confs-available/
ll
cd PIA/
ll
sudo nano 'US New York City.ovpn' 
cd ..
ll
cd ..
ll
sudo killall openvpn
sudo systemctl start tor
service --status-all
sudo systemctl start openvpn
service --status-all
df -H
free -m
sudo apt-get install pass
sudo ufw status
sudo ufw allow 6891
sudo apt-get install deluged deluge-web
service --status-all
deluged
killall deluged
deluge-web
sudo reboot
sudo ufw allow 9050
sudo ufw status
sudo ufw allow 80
sudo ufw allow 443
systemctl | grep running
sudo tor@default.service stop
sudo service tor@default.service stop
sudo nano /etc/apt/sources.list
cd /opt
ll
systemctl | grep running
cd /var/lib
ll
cd tor/
sudo tor
sudo ufw status
sudo cd tor
cd tor
sudo su
pass insert Media/jackett
cd /opt/nzbget/
ll
./nzbget -h
pass who Media/deluge-web
pass show Media/deluge-web
cd /tmp
wget https://nzbget.net/download/nzbget-latest-bin-linux.run
systemctl | grep running
service --status-all
cd ~
ll
ls -lat
cd /tmp/
ll
cd /opt
ll
cd /tmp
ll
sudo sh nzbget-latest-bin-linux.run --destdir /opt/nzbget
sudo ufw allow 6789
service --status-all
cd /opt
nzbget -s
cd nzbget/
nzbget -s
./nzbget -D
sudo ./nzbget -D
service --status-all
systemctl | grep running
sudo ./nzbget -s
pass insert Media/nzbget
systemctl | grep running
service --status-all
killall tor
sudo service tor stop
deluge-web
sudo ufw status
cd /opt
sudo chown -R bruce:bruce /opt/nzbget
sudo killall openvpn
sudo killall tor
sudo systemctl start tor
sudo systemctl start openvpn
sudo killall tor
sudo lsof -i -P -n | grep LISTEN
htop
service --status-all
systemctl | grep running
clear
cd /opt
cd nzbget/
ll
./nzbget -s
ll
sudo lsof -iPn | grep LISTEN
sudo lsof -i -P -n | grep LISTEN
sudo service --status-all
ll
free
df -H
systemctl | grep running
sudo lsof -i -P -n | grep LISTEN
ufw status
sudo ufw status
sudo ufw delete 45627
man ufw
sudo ufw status numbered
sudo ufw delete 24
sudo ufw status numbered
sudo ufw delete 8
sudo ufw status numbered
sudo lsof -i -P -n | grep LISTEN
sudo ufw status numbered
sudo ufw delete 5
sudo ufw status numbered
sudo ufw delete 19 -y
sudo ufw status numbered
sudo ufw delete 6
sudo ufw status numbered
sudo ufw delete 19
sudo ufw status number
sudo ufw status numbered12
sudo ufw delete 25
sudo ufw delete 12
sudo ufw status numbered
sudo ufw delete 24
sudo ufw delete 12
sudo ufw status numbered
pass show Media/nzbget 
clear
htop
cd /opt
sudo git clone https://github.com/thp/urlwatch.git
ll
cd urlwatch/
ll
./urlwatch
sudo ./urlwatch
cd /usr/lib/python3/dist-packages/
ll
cd /lxml
cd lxml
ll
sudo pip3 install cssselect
cd /opt/urlwatch/
sudo ./urlwatch 
sudo pip3 install pyyaml
sudo ./urlwatch 
sudo python3 -m pip3 install pyyaml minidb requests keyring appdirs lxml cssselect
sudo pip3 install pyyaml minidb requests keyring appdirs lxml cssselect
sudo ./urlwatch 
ll
./urlwatch --edit
./urlwatch --edit-config
sudo update-alternatives --config editor
sudo nano /home/bruce/.config/urlwatch/urlwatch.yaml
man urlwatch
man ./urlwatch
reload
sudo update-alternatives --config editor
./urlwatch --edit-config
sudo ./urlwatch --edit-config
sudo ./urlwatch --edit
./urlwatch --add url=https://drunkenslug.com/register,name=DrunkenSlug
./urlwatch --test-filter 1
./urlwatch --telegram-chats
reload
./urlwatch --telegram-chats
reload
./urlwatch --telegram-chats
./urlwatch --edit-config
echo $EDITOR
sudo update-alternatives --config editor
reload
./urlwatch --edit-config
select-editor
reload
./urlwatch --edit-config
which editor
setenv EDITOR nano
export EDITOR=/bin/nano
echo $EDITOR
./urlwatch --edit-config
./urlwatch --edit
pip3 install --upgrade urlwatch
./urlwatch --test-filter 1
./urlwatch --edit-config
ll
cd ~
./urlwatch --edit-config
/opt/urlwatch/urlwatch --edit-config
./urlwatch --edit-config
/opt/urlwatch/urlwatch --edit-config
/opt/urlwatch/urlwatch --edit
/opt/urlwatch/urlwatch --edit-config
/opt/urlwatch/urlwatch --edit
reload
ll
crontab -e
reload
.208:~/Desktop/Ripped
cd /media/1TB/Movies/
scp -r MI3 abbott@192.168.1.208:~/Desktop/Ripped
htop
systemctl | grep running
service --status-all
htop
ll
reload
sudo ufw allow 25
crontab -e
reload
crontab -e
l
ll
crontab -e

ll
crontab -e
reload
crontab -e
reload
sudo service --status-all
man pass
pass insert Media/yqixjyqvh4@newsdemon.com
pass show Media/yqixjyqvh4@newsdemon.com 
ll
cd .password-store/
ll
cd Media/
ll
cd /opt
cd nzbget/
./nzbget -s
pass show Media/yqixjyqvh4@newsdemon.com 
htop
cd /opt/
cd nzbget/
./nzbget -s
htop
clear
pass show Media/nzbget 
pass show Media/nzbget
cd /opt
cd nzbget/
./nzbget -s
cd /opt/
cd nzbget/
./nzbget -s
cd /opt
cd smartmontools-7.0/
ll
./configure
sudo ./configure
man smartctl
make
sudo make
sudo make install
reload
man smartctl
smartctl -H /dev/sbd1
df -H
smartctl -H /dev/sdb1
sudo smartctl -H /dev/sdb1
sudo smartctl -i /dev/sdb1
sudo smartctl -l scterc /dev/sdb1
man smartctl
sudo smartctl -g /dev/sdb1
sudo smartctl -g wcache /dev/sdb1
sudo smartctl -a /dev/sdb1
blkid
sudo smartctl -a /dev/sda1
cd /opt
cd nzbget/
./nzbget -s
htop
./nzbget -s
cd /tmp
cd /home/bruce/Downloads/
tar -xJvpf smartmontools-7.0.tar.gz
sudo mkdir temp
ll
sudo chown bruce:bruce temp
ll
tar -czvf montools-7.0.tar.gz
tar -czvf montools-7.0.tar.gz temp
tar -czvf montools-7.0.tar.gz ~/Downloads/temp
tar -czvf montools-7.0.tar.gz ~/Downloads/temp/
sudo tar -czvf montools-7.0.tar.gz ~/Downloads/temp/
sudo tar -czvf montools-7.0.tar.gz ~/Downloads/temp
sudo tar -czvf montools-7.0.tar.gz ~/Downloads/temp
tar -xzvf montools-7.0.tar.gz -C temp
sudo tar -xzvf smartmontools-7.0.tar.gz -C ~/Downloads/temp
cd temp/
ll
sudo mv smartmontools-7.0/ /opt
cd /media
ll
sudo umount 8TB
blkid
ll
sudo mv 8TB 8TB0
ll
sudo mkdir 8TB1
ll
df -H
htop
sudo hdparm -I /dev/sdb1
ll
df -H
blkid
df -H
blkid
df -H
blkid
badblocks -wsv /dev/sdb1
sudo badblocks -wsv /dev/sdb1
sudo badblocks -wsv -b 4096 /dev/sdb1
blkid
df -H
sudo smartctl --all /dev/sdb1
badblocks -wsv -b 4096 /dev/sdb1
df -H
blkid
sudo badblocks -wsv -b 4096 /dev/sdb1
#
cd /media/
ll
sudo mkdir 8TB
ll
df -H
sudo eject /dev/sdb1
sudo fdisk -l
blkid
sudo nano /etc/fstab
sudo mount /dev/sdb1 /media/8TB
sudo umount /dev/sdb1
sudo mount /dev/sdb1 /media/8TB
blkid
df -H
sudo hdparm -I /dev/sdb1
lsblk -a
lsblk -o "NAME,MAJ:MIN,RM,SIZE,RO,FSTYPE,MOUNTPOINT,UUID"
smartctl -a /dev/sbd1
sudo smartctl -a /dev/sbd1
lshw -class /dev/sbd1
sudo apt-get install hdparm
reload
sudo hdparm -I /dev/sdb1
sudo hdparm -Tt /dev/sdb1
blkid
sudo umount D204319104317A15
sudo umount /dev/sbd1
sudo umount /media/8TB
blkid
sudo umount D204319104317A15
cd /media/
ll
cd 8TB/
ll
cd ..
sudo mount /dev/sdb1 /media/8TB
ll
sudo umount /media/8TB
sudo eject /dev/sbd1
ll
sudo mount /dev/sdb1 /media/8TB
ll
man smartctl
sudo apt-get install smartctl
blkid
sudo mount /dev/sdb1 /media/8TB0
ll
blkid
sudo mount /dev/sdb1 /media/8TB0
sudo mount /dev/sdc1 /media/8TB1
ll
smartctl -a /dev/sdb1
sudo smartctl -a /dev/sdb1
sudo smartctl -a /dev/sdc1
sudo hdparm -I /dev/sdb1
sudo hdparm -I /dev/sdc1
sudo umount /media/8TB1
ll
sudo umount /media/8TB0
df -H
blkid
sudo mount /dev/sdc1
sudo umount /dev/sdb1
blkid
sudo hdparm -I /dev/sdb1
sudo hdparm -I /dev/sdc1
sudo hdparm -I /dev/sde1
sudo hdparm -I /dev/sdd1
blkid
sudo hdparm -I /dev/sdb1
ll
blkid
df -H
blkid
df -H
blkid
sudo hdparm -I /dev/sdb
sudo systemctl restart plexmediaserver
htop
sudo systemctl restart radarr
ping 8.8.8.8
service --status-all
systemctl | grep running
sudo systemctl restart openvpn@default.service
sudo systemctl stop openvpn@default.service
sudo systemctl enable openvpn@default.service
sudo systemctl start openvpn@default.service
cd /opt/
./nzbget -s
cd nzbget/
./nzbget -s
cd ~
ll
cd .vscode-server-insiders/
ll
cd ..
sudo rm -rf .vscode-server-insiders/
blkid
sudo hdparm -I /dev/sda1
sudo smartctl -i -d sat /dev/sda1
sudo smartctl -a /dev/sba1
sudo smartctl -a /dev/sda1
sudo smartctl --smart=on /dev/sda1
sudo smartctl --smart=on -T permissive /dev/sda1
sudo smartctl --scan
sudo smartctl -d sat --smart=on /dev/sda1
sudo smartctl -a /dev/sda1
sudo smartctl -d sat -a /dev/sda1
sudo smartctl -d sat -t short /dev/sda1
sudo smartctl -d sat -a /dev/sda1
sudo apt install stress
sudo apt-get update
sudo systemctl unmask  -- -.mount
reload
systemctl unmask  -- -.mount
cd /tmp
sudo wget -q https://github.com/containous/traefik/releases/download/v2.0.0-rc4/traefik_v2.0.0-rc4_linux_armv7.tar.gz
ll
sudo tar -xf traefik* -C /opt/
cd /opt/
ll
sudo chown -R bruce:bruce /opt/traefik 
ll
sudo rm traefik 
sudo git clone https://github.com/containous/traefik
cd traefik/
./traefik --configFile=traefik.toml
ll
cd script/
ll
cd ..
sudo rm -rf traefik/
cd /tmp/
ll
curl -sSL -o traefik.tar.gz https://github.com/containous/traefik/releases/download/v2.0.0-rc4/traefik_v2.0.0-rc4_linux_armv7.tar.gz
ll
sudo mkdir -p /opt/traefik
sudo tar zxf traefik.tar.gz -C /opt/traefik
cd /opt/
cd traefik/
ll
man traefik
sudo reboot
ll
cd code/
ll
cd _temp/
ll
cd ..
sudo mkdir test
cd test/
sudo touch temp_test.sh
cd code
cd tes
cd test/
cd ..
sudo chown -R bruce:bruce test
ll
cd test/
chmod +x temp_test.sh 
ll
./temp_test.sh 
ll
cd ~
sudo apt-get install ntfs-3g ntfs-config
df -H
cd /opt/
cd nzbget/
./nzbget -s
df -H
cd /media
ll
[A
sudo mount /dev/sda1 /media/8TB0
sudo umount 527D6B6957E75144
blkid
sudo mount /dev/sda1 /media/8TB0
sudo umount /dev/sda1
blkid
sudo mount /dev/sda1 /media/8TB0
df -H
ll
blkid
man smartctl
sudo smartctl -i -d auto /dev/sda1
sudo smartctl --smart=on -T permissive /dev/sda1
sudo smartctl --scan
sudo smartctl -d sat -a /dev/sda1
sudo smartctl -d ata -a /dev/sda1
sudo smartctl -d auto -a /dev/sda1
sudo smartctl -d usbcypress -a /dev/sda1
sudo smartctl -d test -a /dev/sda1
sudo smartctl -d scsi -a /dev/sda1
sudo smartctl -d ata -a /dev/sda1
sudo smartctl -d sat -a /dev/sda1
sudo smartctl -d sat -i /dev/sda1
sudo smartctl -d sat -s on /dev/sda1
sudo smartctl -d sat -H /dev/sda1
sudo smartctl -d sat -c /dev/sda1
sudo smartctl -d sat -t /dev/sda1
sudo smartctl -d sat -t short /dev/sda1
sudo smartctl -d sat -H /dev/sda1
ll
sudo umount /media/8TB0
sudo mount /dev/sda1 /media/8TB0
df -H
sudo umount /media/8TB0
df -H
blkid
df -H
sudo umount /media/bruce/1SJULGKZ
blkid
sudo smartctl -d sat -s on /dev/sda1
sudo mount /dev/sda1 /media/8TB0
ll
sudo smartctl -d sat -i /dev/sda1
sudo smartctl -d sat -a /dev/sda1
sudo smartctl -d sat -t short /dev/sda1
sudo smartctl -d sat -H /dev/sda1
sudo smartctl -d sat -t long /dev/sda1
sudo smartctl -d sat -H /dev/sda1
ll
df -H
sudo smartctl -d sat -a /dev/sda1
su ntfs-config
sudo ntfs-config
sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
sudo systemctl unmask sleep.target suspend.target hibernate.target hybrid-sleep.target
sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
sudo smartctl -d sat -t long /dev/sda1
sudo smartctl -d sat -a /dev/sda1
sudo smartctl -d sat -t long /dev/sda1
sudo smartctl -d sat -i /dev/sda1
sudo smartctl -d sat -a /dev/sda1
sudo hdparm -I /dev/sda1
sudo badblocks -wsv -b 4096 /dev/sda1
df -H
umount /dev/sda1
umount /media/8TB0
df -H
blkid
sudo umount 01D5734FCFDA0480
sudo umount /dev/sda1
blkid
df -H
blkid
sudo badblocks -wsv -b 4096 /dev/sda1
blkid
df -H
sudo umount /dev/sda2
blkid
df -H
sudo badblocks -wsv -b 4096 /dev/sda2
df -H
blkid
sudo smartctl -d sat -a /dev/sda2
sudo smartctl -d sat -t short /dev/sda2
sudo smartctl -d sat -a /dev/sda2
sudo umount /dev/sda2
blkid
df -H
blkid
sudo adduser rescue
sudo adduser rescue sudo
open /etc/sudoers.d/010_pi-nopasswd 
cd /etc/sudoers.d/
ll
open README 
open 010_at-export 
su rescue
su sudo
sudo su
cd ~
ll
cd .ssh
ll
open authorized_keys 
chmod 600 authorized_keys 
ll
cd ..
sudo awk -F: '($2 == "") {print}' /etc/shadow
open /etc/shadow
sudo service ssh restart
reload
sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
cd ~/.vnc/
ll
cd config.d/
ll
cd ..
ll
open vncchat.xml 
geany /etc/ passwd
geany /etc/passwd
sudo geany .bash_aliases 
reload
open /etc/ssh/sshd_config 
sudo apt-get -y purge "pulseaudio*"
sudo apt-get autoremove && sudo apt-get autoclean
df -h
open /etc/ssh/sshd_config 
open /etc/sudoers
cd /etc/sudoers.d/
ll
open 010_pi-nopasswd 
mv 010_pi-nopasswd 010_bruce-nopasswd
sudo mv 010_pi-nopasswd 010_bruce-nopasswd
ll
open README 
open .bash_history 
groups
groups bruce
su rescue
open /etc/sudoers.d/
cd /etc
ll
cd sudoers.d/
ll
sudo visudo
ll
sudo visudo 
sudo visudo 010_at-export 
sudo visudo 010_bruce-nopasswd 
sudo visudo
sudo visudo 010_defaults-timeout
ll
sudo visudo
sudo reboot
sudo visudo
cd /etc/sudoers.d/
ll
open /etc/passwd
cd ~
sudo cat/etc/group | grep pi
sudo /etc/group | grep pi
sudo cat /etc/group | grep pi
sudo cat /etc/group | grep root
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev bruce
sudo cat /etc/group | grep bruce
gpasswd -d pi audio
sudo gpasswd -d pi dialout,
sudo cat /etc/group | grep bruce
sudo usermod -G audio bruce
sudo cat /etc/group | grep bruce
sudo cat /etc/group | grep pi
sudo usermod -G audio pi
sudo cat /etc/group | grep pi
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio pi
sudo cat /etc/group | grep pi
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio,sudo pi
sudo cat /etc/group | grep pi
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio,sudo,video pi
sudo cat /etc/group | grep pi
sudo gpasswd -a bruce sudo
sudo cat /etc/group | grep pi
sudo cat /etc/group | grep bruce
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio,sudo,video bruce
sudo cat /etc/group | grep bruce
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio,sudo,video,spi bruce
sudo cat /etc/group | grep bruce
sudo usermod -G adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio,sudo,video,spi pi
sudo cat /etc/group | grep bruce
sudo reboot
sudo visudo
sudo reboot
cd ~/.vnc/
ll
open vncchat.xml 
cd ~
sudo sed /etc/polkit-1/localauthority.conf.d/60-desktop-policy.conf -i -e "s/;unix-user:0/;unix-user:bruce;unix-user:0/"
open /etc/shadow
open /etc/group
sudo passwd root
cd /etc
cd polkit-1/
ll
cd localauthority.conf.d/
ll
open 60-desktop-policy.conf 
cd ~
sudo gpasswd -d pi adm,dialout,cdrom,audio,plugdev,games,users,input,netdev,i2c,gpio,sudo,video,spi
sudo usermod -G adm pi
cd /etc
cd polkit-1/
open 60-desktop-policy.conf 
ll
cd localauthority
ll
cd nullbackend.conf.d/
ll
open 50-nullbackend.conf 
cd ..
cd localauthority.conf.d/
ll
open 50-localauthority.conf 
open /etc/fstab
cd /m
cd /media/
ll
cd 64GB/
ll
cd ..
sudo blkid
sudo mount /dev/sdc2 64GB
reload
sudo mount /dev/sdc2 64GB
open .bash_aliases 
open .bash_history
cd /media/
sudo blkid
sudo mount /dev/sdc2 64GB
cd ~
open .bash_history 
cd /media
ll
cd 64GB/
ll
cd home/bruce/
open .bash_history 
cd /tmp
curl -sSL https://get.docker.com | sh
ll
cd ~
ll
cd .vnc/
open vncchat.xml 
cd /etc/apt/sources.list.d/
ll
open docker.list 
sudo apt-get update
sudo apt-get upgrade
open docker.list 
add-key https://download.docker.com/linux/debian/gpg
sudo rm /etc/apt/sources.list.d/docker.list
cd /tmp
ll
curl -sL get.docker.com | sed 's/9)/10)/' | sh
apt purge docker-ce containerd.io
sudo apt purge docker-ce containerd.io
sudo apt autoremove
sudo reboot
sudo apt update --allow-releaseinfo-change
sudo apt-get upgrade
cd /tmp
ll
sudo curl -sL get.docker.com | bash
sudo apt purge docker-ce containerd.io
sudo apt autoremove
sudo reboot
cd /etc/apt/sources.list.d/
ll
rm docker.list 
sudo rm docker.list 
sudo apt update
sudo apt-get upgrade
sudo apt autoremove
sudo dpkg --configure -a
cd ~
clear
ls -l /var/lib/dpkg/info | grep -i docker
cd /var/lib/dpkg/
ll
cd info/
ll
cd ..
ll
open available 
cd ~
cd Downloads/
ll
mv containerd.io_1.2.6-3_armhf.deb /tmp
ll
mv docker-ce_19.03.2_3-0_debian-buster_armhf.deb /tmp
mv docker-ce-cli_19.03.2_3-0_debian-buster_armhf.deb /tmp
open /etc/apt/sources.list.d/docker-ce.list
apt-key
apt-key add https://download.docker.com/linux/debian/gpg
sudo apt-key add https://download.docker.com/linux/debian/gpg
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo apt-get update
cd /opt
ll
cd containerd/
ll
sudo ls
cd bin
sudo ls
cd ..
cd li
cd lib
sudo ls
cd ..
cd ~
open .bash_aliases 
cd /etc
ll
cd apt
cd sources.list.d/
ll
open docker-ce.list 
sudo rm docker-ce.list 
ll
cd /tmp
ll
sudo dpkg -i containerd.io_1.2.6-3_armhf.deb 
sudo dpkg -i docker-ce-cli_19.03.2_3-0_debian-buster_armhf.deb 
sudo dpkg -i docker-ce_19.03.2_3-0_debian-buster_armhf.deb 
systemctl status docker.service
journalctl -xe
sudo systemctl stop docker
open /lib/systemd/system/docker.service
sudo systemctl daemon-reload
sudo systemctl start docker
systemctl status docker.service
open /lib/systemd/system/docker.service
sudo dockerd &
open /lib/systemd/system/docker.service
sudo systemctl daemon-reload
sudo systemctl start docker
sudo rm -rf /var/lib/docker
sudo systemctl start docker
cd /var/lib/docker
ll
sudo ll
cd ..
cd docker
sudo ls
sudo dockerd &
ufw disable
sudo ufw status
service --status-all
ip link add name docker0 type bridge
sudo ip link add name docker0 type bridge
sudo ip addr add dev docker0 172.17.0.1/16
sudo reboot
sudo ufw status
service --status-all
sudo dockerd &
systemctl status docker.service
sudo docker info
sudo ip link add name docker0 type bridge
sudo ip addr add dev docker0 172.17.0.1/16
sudo systemctl daemon-reload
sudo systemctl start docker
systemctl status docker.service
sudo dockerd &
systemctl status docker.service
sudo apt-get update
sudo apt-get upgrade
sudo apt-get autoremove
service --status-all
docker --version
docker info
sudo docker info
docker run hello-world
open .bash_aliases 
sudo systemctl daemon-reload
sudo systemctl start docker
docker run hello-world
sudo usermod -a -G docker $USER
open .bash_aliases 
sudo reboot
docker info
docker run hello-world
open /etc/ssh/sshd_config
sudo reboot
docker pull traefik
systemctl status docker.service
open .bash_aliases 
service --status-all
open .bash_aliases 
sudo killall openvpn
docker pull traefik
open /etc/resolv.conf
sudo nano /etc/resolv.conf
cd /etc/
ll
cd resolvconf/
ll
cd update-libc.d/
ll
open avahi-daemon 
cd ..
open resolvconf.conf 
systemd.resolve --status
systemd.resolv --status
sudo script-security 2
service openvpn --status
openvpn --config server.conf
service openvpn restart
openvpn --config server.conf
openvpn 
openvpn --config
cd openvpn/
ll
openresolv
cd /usr/sbin
ll
cd ~
cd /etc/
open resolv.conf
echo $(type -p resolvconf)
cd sbin
cd /sbin
ll
open resolvconf 
man resolvconf
service openvpn start
sudo killall openvpn
service --status-all
service openvpn stop
service --status-all
cd /usr/share/
cd openvpn/
ll
open verify-cn 
ll
open update-resolv-conf
echo $(type -p resolvconf)
cd client/
ll
..
cd /etc/openvpn/client/confs-available/PIA/
ll
open US\ New\ York\ City.ovpn 
..
ll
..
ll
..
ll
open update-resolv-conf
open update-resolv-conf-ORIG 
open default.conf 
sudo killall openvpn
cd client/
ll
cd ..
cd server/
ll
cd ..
cd client/
cd confs-available/
ll
cd PIA/
ll
cd ..
open cloudflare-dns.ovpn
service openvpn restart
stopvpn
reload
stopvpn
cd ..
man openvpn
open .bash_history 
cd /etc/init.d/
ll
open openvpn 
cat /etc/resolv.conf
sudo service openvpn restart
sudo reboot
startvpn
cd /etc/openvpn/
ll
service --status-all
open update-resolv-conf
pia
reload
unlink
sudo service openvpn restart
cloudflare
ll
pia
unlink
pia
unlink
cloudflare
reload
unlink
ll
cloudflare
ll
pia
unlink
pia
unlink
cloudflare
unlink
pia
open /var/run/dnsmasq/resolv.conf
open /etc/pdnsd.conf
open /var/cache/unbound/resolvconf_resolvers.conf
reload
vpnoff
reload
stopvpn
cd /etc/openvpn/
ll
open update-resolv-conf
cd client
ll
cd confs-available/
ll
open cloudflare-dns.ovpn 
cd ..
..
sudo service openvpn restart
open /etc/resolv.conf
cd /etc/resolvconf/
ll
cd update-libc.d/
ll
open avahi-daemon 
cd ..
ll
cd ..
open resolvconf.conf 
open /etc/resolv.conf
cd /usr/lib/avahi/
ll
open avahi-daemon-check-dns.sh 
service --status-all
ll
open resolv.conf.bak 
rm resolv.conf
sudo rm resolv.conf
open resolv.conf
sudo chattr -i /etc/resolv.conf
open resolv.conf
sudo chattr +i /etc/resolv.conf
cd openvpn/
ll
cd client/
ll
cd confs-available/
ll
rm cloudflare-dns.ovpn 
sudo rm cloudflare-dns.ovpn 
ll
open /etc/resolv.conf
cd /etc/
ll
open resolvconf.conf
cd resolvconf/
ll
cd ..
ll
sudo su
stopvpn
ipconfig /all
ipconfig
apt-get install net-tools
sudo apt-get install net-tools
sudo locate ifconfig
sudo updatedb
sudo ifconfig
sudo ifconfig /all
cat /etc/resolv.conf
ifconfig -a | grep inet | grep -v 127.0.0.1 | awk '{print $2}'
traceroute yahoo.com
startvpn
docker
docker ps
docker info
docker
docker ps
docker images
open .bash_aliases 
reload
update
upgrade
docker run -d -p 8080:8080 -p 80:80 -v $PWD/traefik.toml:/etc/traefik/traefik.toml traefik
docker ps
echo $PWD
ll
open traefik.toml/
open traefik.toml
sudo nano traefik.toml/
sudo rm traefik.toml
cd traefik.toml/
ll
cd ..
sudo rm -rf traefik.toml/
ll
sudo mkdir -p code
ll
cd code/
ll
mkdir scripts
sudo mkdir scripts
cd scripts/
ll
open traefik.toml
cd ~
sudo chown -R bruce:bruce code
ll
cd code/
ll
cd scripts/
ll
docker run -d -p 8080:8080 -p 80:80 -v $PWD/code/scripts/traefik.toml:/etc/traefik/traefik.toml traefik
docker ps
docker images
ll
sudo rm -rf code
ll
cd ..
ll
docker run -d -p 8080:8080 -p 80:80 -v /home/bruce/code/scripts/traefik.toml:/etc/traefik/traefik.toml traefik
docker images
docker ps
docker stop 23df8d697b6a
docker ps
open .bash_history 
docker ps
docker images
docker system prune -a
docker ps
docker images
docker start traefik
docker image build traefik
docker images
docker ps
curl --header 'Host:test.docker.localhost' 'http://localhost:80/'
open .bash_history 
cd /opt/
ll
cd ~
ll
cd code/
ll
cd scripts/
ll
open traefik.yml
cd ~
docker run -d -p 8080:8080 -p 80:80 -v /home/bruce/code/scripts/traefik/traefik.yml:/etc/traefik/traefik.yml -v /var/run/docker.sock:/var/run/docker.sock traefik:v2.0
docker run -d -p 8080:8080 -p 80:80 -v $PWD/code/scripts/traefik/traefik.yml:/etc/traefik/traefik.yml -v /var/run/docker.sock:/var/run/docker.sock traefik:v2.0
docker run -d --name test containous/whoami
sudo lsof -i -P -n | grep LISTEN
cd /tmp
sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version
curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
cd /usr/local/bin/
ll
open docker-compose 
sudo rm docker-compose 
sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
ll
open docker-compose 
sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
stopvpn
reload
sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
echo "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" 
pip --version
sudo pip install docker-compose
cd /usr/local/bin/
ll
sudo rm docker-compose 
reload
docker-compose
ll
cd ..
docker-compose --version
update
upgrade
cd ~
open .bash_aliases 
reload
autoremove
docker-compose --version
docker images
docker ps
docker images
ll
cd code
ll
cd scripts/
ll
cd traefik/
ll
cd traefik.yml/
cd ..
ll
mv traefik.toml traefik
sudo mv traefik.toml traefik
sudo mv traefik.yml traefik
cd traefik/
ll
sudo rm -rf traefik.yml/
cd ..
ll
sudo mv traefik.yml traefik
ll
cd traefik/
ll
mv traefik.yml docker-compose.yml
sudo mv traefik.yml docker-compose.yml
ll
sudo chown -R bruce:bruce docker-compose.yml 
cd ..
ll
sudo chown -R bruce:bruce traefik/
ll
cd traefik/
docker compose up
docker-compose up
reload
docker-compose up
docker --version
traefik --version
docker images
sudo docker info
cd /tmp
ll
dpkg -i containerd.io_1.2.6-3_armhf.deb
sudo dpkg -i containerd.io_1.2.6-3_armhf.deb
cd /etc/apt/
ll
open sources.list
sudo add-apt-repository "deb [arch=$(uname -m)] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
sudo apt-get install containerd
reload
update
cd ~
ll
cd .gnupg/
ll
open pubring.kbx 
open pubring.kbx
sudo apt-get install debian-archive-keyring
sudo apt-key update
update
apt-key
cd ..
docker --version
docker images
sudo systemctl daemon-reload
sudo systemctl start docker
service --status-all
systemctl unmask docker.service
sudo systemctl unmask docker.socket
systemctl start docker.service
systemctl status docker.service
reload
open .bash_history 
echo "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" 
echo $(lsb_release -cs)
ll
cd sources.list.d/
ll
open raspi.list 
open plexmediaserver.list
cd ..
ll
open sources.list
sudo apt-get install software-properties-common
reload
lsb_release -cs
update
reload
update
gpg --keyserver keyring.debian.org --recv-keys 04EE7237B7D453EC
apt-get autoremove gnome-keyring 
sudo apt-get autoremove gnome-keyring 
sudo apt-get autoremove debian-keyring 
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
update
reload
update
upgrade
sudo reboot
open trusted.gpg
ll
cd trusted.gpg.d/
ll
cd ..
ll
cd sources.list.d/
ll
update
reload
update
sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo curl -L --fail https://github.com/docker/compose/releases/download/1.24.1/run.sh -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker --version
update
upgrade
sudo reboot
cd /etc/apt/
ll
open sources.list
service --status-all
docker --version
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
sudo usermod -aG docker your-user
sudo usermod -aG docker bruce
cd /etc/apt/
ll
cd sources.list.d/
ll
open docker.list 
update
cd /etc/apt
cd sources.list.d/
ll
sudo rm docker.list 
open raspi.list 
open plexmediaserver.list
reload
update
upgrade
cd ..
cd ~
~
docker --version
cd /etc/apt
ll
cd sources.list.d/
ll
cd ..
ll
sudo cp sources.list sources.list-old
open sources.list
reload
update
upgrade
ll
open sources.list
~
open .bash_history 
code .bash_history 
reload
code .bash_history 
~
cd code/
cd scripts/
ll
cd traefik/
ll
docker compose up
docker images
sudo curl -L --fail https://github.com/docker/compose/releases/download/1.24.1/run.sh -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
cd /usr/local/bin
ll
open docker-compose 
~
cd code
cd scripts/
mkdir composetest
cd composetest/
open app.py
open requirements.txt
open Dockerfile
open docker-compose.yml
docker compose up
version: '3'
services:
sudo docker run hello-world
docker ps
docker images
docker pull docker/compose
sudo curl -L https://github.com/docker/compose/releases/download/1.25.0-rc2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
~
open .bash_aliases 
reload
scripts
0
~
update
sudo apt install -y python python-pip libffi-dev python-backports.ssl-match-hostname
sudo pip install docker-compose
scripts
ll
cd composetest/
docker compose up
docker-compose up
cd ..
cd traefik/
ll
code docker-compose.yml 
code traefik.toml 
docker-compose up
docker images
code docker-compose.yml 
sudo nano docker-compose.yml 
docker-compose up
code traefik.toml 
docker-compose down
docker-compose up
code ~/.bash_history 
docker system prune -a
docker-compose up
cd /var/libe
cd /var/lib
ll
sudo rm -rf /var/lib/docker
sudo service docker stop
sudo rm -rf /var/lib/docker
sudo service docker start
docker images
docker image rm 40575d48ed81
docker images
startvpn
stopvpn
id $USER
~
stopvpn
scripts
ll
cd traefik/
docker-compose down
docker-compose up
sudo docker-compose up
ll
code docker-compose.yml 
code traefik.toml 
docker-compose down
docker-compose up
cd /opt
ll
cd /opt/traefik/
ll
apache2-utils
l
ll
docker-compose up
ll
code docker-compose.yml 
docker-compose down
docker-compose up
docker-compose down
docker-compose up
docker-compose down
docker-compose up
ll
cp docker-compose.yml docker-compose.yml-bak 
ll
docker images
docker images rm a843a903ac21
ll
docker images
docker ps
docker rmi a843a903ac21
docker rmi -f a843a903ac21
docker rmi -f 31d8a01c5881
docker rmi -f e7d3b4e1d6a1
docker images
ll
docker-compose down
docker-compose up
scripts
ll
git clone https://github.com/containous/traefik-migration-tool.git
ll
cd traefik-migration-tool/
ll
cd /tmp
wget https://github.com/containous/traefik-migration-tool/releases/download/v0.9.0/traefik-migration-tool_v0.9.0_linux_armv7.tar.gz
ll
sudo tar -xf traefik* -C /opt/traefik-migration/
cd /opt/
ll
cd traefik/
cd ..
traefik-migration-tool
traefik-migration-tool static
ll
rm LICENSE 
sudo rm LICENSE 
cd docs/
ll
cd ..
ll
sudo rm -rf docs/
sudo rm traefik
sudo rm traefik-migration-tool 
ll
cd /tmp/
ll
cd /opt/
ll
sudo mkdir traefik-migration
cd /tmp
sudo tar zxf traefik-migration-tool_v0.9.0_linux_armv7.tar.gz -C /opt/traefik-migration/
cd /opt
cd traefik-migration/
ll
cd ..
ll
sudo chown -R bruce:bruce traefik-migration/
cd traefik-migration/
ll
export PATH=$PATH:/opt/traefik-migration/traefik-migration-tool
cd ..
ll
cd traefik
ll
cd ..
sudo rm -rf traefik
ll
cd /media/
ll
cd 64GB/
ll
TLS on entry point "https" must be converted manually. Look https://docs.traefik.io/v2.0/routing/routers/#tls
Redirect on entry point "http" must be converted manually. Look https://docs.traefik.io/v2.0/middlewares/redirectscheme/
The domain (mausma.us) defined in the Docker provider must be converted manually. Look https://docs.traefik.io/v2.0/providers/docker/#defaultrule
The entry point (dashboard) defined in API must be converted manually. Look https://docs.traefik.io/v2.0/operations/api/
The entry point (https) defined in the ACME configuration must be converted manually. Look https://docs.traefik.io/v2.0/routing/routers/#certresolver
sudo mkdir 1TB
ll
sudo rm -rf 1TB/
..
sudo mkdir 1TB
clear
ll
sudo blkid
sudo mount /dev/sdc2 64GB
ll
cd 64GB/
ll
cd m
cd media/
ll
cd ..
ll
cd opt/
ll
cd ..
cd etc
ll
..
cd var/
ll
cd lib/
cd plexmediaserver/
ll
cd Library/
ll
cd Application\ Support/
ll
cd 'Plex Media Server'/
ll
cd /etc/init/
ll
code paxctld.conf 
code plexmediaserver.conf 
cd /etc/apt/
ll
code sources.list
reload
update
upgrade
htpasswd
code sources.list
cd /etc/init
ll
code plexmediaserver.conf 
cd /var/lib/plexmediaserver/Library/Application\ Support/
ll
cd 'Plex Media Server'/
ll
~
code .bash_history 
cd /media/
ll
sudo mount /dev/sdc2 64GB
ll
cd bruce/
ll
cd ..
cd bruce/
sudo blkid
cd ..
ll
sudo mount /dev/sdf1 1TB
cd /var/lib/
ll
cd plexmediaserver/
ll
cd Library/
ll
cd 'Application Support'/
ll
cd 'Plex Media Server'/
ll
cd Media/
ll
cd localhost/
ll
cd ..
ll
update
upgrade
autoremove
sudo systemctl restart plexmediaserver
systemctl list-unit-files | grep enabled
systemctl list-unit-files | grep running
systemctl | grep running
cd 64GB/
code /etc/fstab
cd etc/
code fstab
sudo blkid
cd /etc
code fstab
ntfs-3g
sudo apt-get install ntfs-3g
reload
ntfs-3g
sudo blkid
cd /media
ll
sudo chmod 770 1TB
ll
sudo mount /dev/sdc2 64GB
ll
cd 64GB/
cd media/
ll
cd ..
cd etc
open fstab
code fstab
cd /media/
ll
sudo systemctl enable plexmediaserver.service
sudo systemctl start plexmediaserver.service
systemctl status plexmediaserver
cd sources.list.d/
ll
code plexmediaserver.list
wget -q https://downloads.plex.tv/plex-keys/PlexSign.key -O - | sudo apt-key add -
reload
update
upgrade
sudo reboot
cd /etc/apt/
ll
cd sources.list.d/
ll
cd ..
code sources.list
systemctl status plexmediaserver
cd /tmp
ll
wget https://downloads.plex.tv/plex-media-server-new/1.18.0.1913-e5cc93306/debian/plexmediaserver_1.18.0.1913-e5cc93306_armhf.deb
systemctl status plexmediaserver
sudo apt-get purge plexmediaserver
cd /tmp/
ll
wget https://downloads.plex.tv/plex-media-server-new/1.18.0.1913-e5cc93306/debian/plexmediaserver_1.18.0.1913-e5cc93306_armhf.deb
ll
sudo rm plexmediaserver_1.18.0.1913-e5cc93306_armhf.deb 
ll
wget -O - https://dev2day.de/pms/dev2day-pms.gpg.key | sudo apt-key add
sudo apt-get install apt-transport-https
stopvpn
wget -O - https://dev2day.de/pms/dev2day-pms.gpg.key | sudo apt-key add
ll
cd /media/
sudo mount /dev/sdc2 64GB
cd 64GB/
ll
cd etc/
cd default/
ll
code plexmediaserver 
code ufw 
cd etc
cd ..
cd ufw/
ll
sudo rsync -av /media/64GB/etc/ufw/ /etc/ufw/
cd ..
cd default/
ll
code ufw 
cd ..
sudo rsync -av /media/64GB/etc/default/ufw/  /etc/default/ufw 
sudo cp -a /media/64GB/etc/default/ufw  /etc/default/ 
cd /media/
cd 64GB/
ll
cd home/bruce/
code .bash_history 
code .bash_history
code .bash_history-rescued 
cd /media
sudo mount /dev/sdc2 64GB
cd 64/etc
cd 64GB/etc
ll
code groups
code group
curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
wget -q0 - https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
wget https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
reload
wget https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
sudo wget https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
wget -q -O- http://archive.getdeb.net/getdeb-archive.key
sudo apt-key add getdeb-archive.key
ll
sudo rm PlexSign.key
sudo rm PlexSign*
ll
cd /tmp
ll
cd ~
ll
cd .vscode-server-insiders/
ll
cd ..
cd /tmp
ll
wget -q -O- http://archive.getdeb.net/getdeb-archive.key
ll
update
upgrade
sudo apt-get install apt-transport-https
cd /etc/
ll
cd /var/lib/
ll
sudo rm -rf plexmediaserver/
code /etc/apt/
ll
cd /etc/apt/
ll
cd sources.list.d/
ll
code plexmediaserver.list 
sudo rm plexmediaserver.list 
cd ..
code sources.list
echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list
code sources.list
cd /etc/apt/
code sources.list
sudo blikd
sudo blkid
cd /media/
sudo mount /dev/sde2 32GB
cd 32GB/
cd etc/apt
code sources.list
docker pull plexinc/pms-docker
stopvpn
docker images
docker rmi dd235bfe365c
docker pull linuxserver/plex
cd /opt
ll
cd traefik
ll
code docker-compose.yml 
docker ps
systemctl status plexmediaserver
cd /media/1TB/
ll
sudo rm -rf 'TV\ Shows'
ll
cd TV\ Shows/
ll
cd ..
ll
cd Library/
ll
cd Library/
ll
docker stop plex
docker start plex
docker image prune
cd /opt/
ll
cd traefik
ll
code docker-compose.yml 
reload
docker-compose down
docker-compose up
cd /etc/
code group
reload
cd /media/1TB/
ll
sudo mkdir Transcoding
sudo mkdir Plex
ll
cd /media
ll
cd 1TB/
ll
sudo mkdir Library
ll
id username
id bruce
sudo blkid
df -H
sudo df -H
cd 1TB/
cd Plex/
ll
cd Library-bak/
ll
cd Application\ Support/
ll
cd Plex\ Media\ Server/
ll
code Preferences.xml 
ll
code plexmediaserver.pid 
cd /opt/traefik
ll
code docker-compose.yml 
cd /opt/traefik
ll
docker stop $(docker ps -q)
docker-compose up
stopvpn
cd /media/1
cd /media/1TB/
ll
sudo rm -rf Library/
sudo mv Transcoding Transcoder
ll
cd Plex/
ll
cd Library/
ll
cd Application\ Support/
ll
cd Plex\ Media\ Server/
ll
code Preferences.xml 
..
sudo mv Library Library-bak
ll
cd Library
ll
cd Application\ Support/
cd Plex\ Media\ Server/
ll
code Preferences.xml 
ll
code plexmediaserver.pid 
cd Media/
ll
cd localhost/
ll
cd 0
ll
cd ..
docker ps
cd /media
ll
sudo mount /dev/sdc2 64GB
cd 64GB
cd var/lib
ll
cd plexmediaserver/
ll
cd Lib
cd Library/
Application\ Support/Plex\ Media\ Server/
cd Application\ Support/Plex\ Media\ Server/
ll
code Preferences.xml 
cd /media/1TB/Plex/Library/Application\ Support/Plex\ Media\ Server/
ll
sudo mv Preferences.xml Preferences.xml-bak
...
..
ll
cd Movies/
ll
cd ..
cd /opt/traefik
ll
docker stop $(docker ps -q)
docker-compose up
docker-compose up -d
code /etc/apt/sources.list
cd /media/
ll
sudo umount 64GB
sudo chown -R bruce:bruce .bash_eternal_history 
ll
sudo rm .bash_history-bak 
sudo rm .bash_history-rescued 
ll
code .bash_history 
cd /etc/default/
ll
code plexmediaserver 
code keyboard 
dpkg-reconfigure keyboard-configuration 
sudo dpkg-reconfigure keyboard-configuration 
service keyboard-setup restart 
udevadm trigger --subsystem-match=input --action=change
sudo udevadm trigger --subsystem-match=input --action=change 
~
code .bash_history 
reload
#1570934082
code .bash_history 
#1570934206
ll
#1570934215
sudo rm .bash_history 
#1570934217
ll
#1570934226
code .bash_logout 
#1570934245
code .profile 
code /etc/default/keyboard 
#1570934344
code .keyboard
cd /opt/traefik
ll
cd ddns/
ll
#1570935431
clear
#1570935437
cd /opt/traefik
#1570935438
ll
code config.json 
#1570935448
code docker-compose.yml 
#1570935736
docker
#1570935744
clear
#1570935752
docker ps
#1570935780
docker stop 3c7ea2684e44
#1570935798
dockstop 740dad019bb0
#1570935807
dockstop 30d37ef152e2
#1570935827
dockup -d
#1570935838
docker ps
#1570935911
dockstop 740dad019bb0
#1570935914
dockstop 30d37ef152e2
#1570935921
docker stop 3c7ea2684e44
#1570936064
code dockerfile
#1570937169
ll
#1570937180
sudo rm dockerfile 
#1570937184
docker build -t qmcgaw/ddns-updater --build-arg BASE_IMAGE_BUILDER=arm32v7/golang --build-arg BASE_IMAGE=arm32v7/alpine --build-arg GOARCH=arm --build-arg GOARM=7 https://github.com/qdm12/ddns-updater.git
#1570937608
ll
#1570937634
docker images
#1570937650
docker ps
#1570937658
docker
#1570937677
docker images
#1570937700
docker rmi 721923cd3070
#1570937721
docker rmi -f 721923cd3070
#1570937733
docker rmi -f 5182fbf377e5
#1570937744
docker rmi -f a366111e2ecd
#1570937750
docker images
#1570937769
docker rmi -f 869393b1b381
#1570937780
docker rmi -f fff333dc0cce
#1570937786
cd ddns
#1570937814
cd ..
#1570937827
chown -R 1001 ddns
#1570937828
ll
#1570937851
id
#1570937864
uid
cd /etc/
ll
code group
cd /opt/traefik
;;
ll
cd ddns/
ll
code config.json 
#1570937874
code docker-compose.yml 
code dockerfile
docker build -t qmcgaw/ddns-updater --build-arg BASE_IMAGE_BUILDER=arm32v7/golang --build-arg BASE_IMAGE=arm32v7/alpine --build-arg GOARCH=arm --build-arg GOARM=7 --user=1001 https://github.com/qdm12/ddns-updater.git
#1570938619
ll
#1570938632
chown 700 ddns
#1570938639
sudo chown 700 ddns
#1570938663
sudo chown -R 1001 ddns
#1570938676
cd ddns/
#1570938677
ll
#1570938686
sudo 400 config.json 
#1570938693
sudo chmod 400 config.json 
#1570938694
ll
#1570938701
cd ..
#1570938703
ll
echo $CURRENT_UID
id -u bruce
id -g bruce
id -G bruce
id bruce
echo $UID
#1570938779
code docker-compose.yml 
#1570939095
cd ddns
#1570939251
docker build -t qmcgaw/ddns-updater --build-arg BASE_IMAGE_BUILDER=arm32v7/golang --build-arg BASE_IMAGE=arm32v7/alpine --build-arg GOARCH=arm --build-arg GOARM=7 https://github.com/qdm12/ddns-updater.git
#1570939751
cd ..
#1570939766
docker ps
#1570939776
code docker-compose.yml 
#1570939815
dockup -d
#1570939853
code docker
#1570939883
reload
#1570939895
dockup -d
#1570939909
dockdown
#1570939925
dockup -d
#1570939944
stopvpn
#1570939955
dockup -d
#1570939963
docker ps
#1570940045
docker stop f17f237a53e3
#1570940052
docker stop e6ac0da45210
#1570940062
docker stop 66b666856890
#1570940074
code docker-compose.yml 
#1570940247
docker images
#1570940377
docker rmi -f 1033e887b001
#1570940386
docker rmi -f 6c65601cf608
#1570940394
docker rmi -f 3cf7bff99533
#1570940405
docker rmi -f 869393b1b381
#1570940409
ll
#1570940413
docker images
#1570940423
docker rmi -f fff333dc0cce
#1570940429
docker rmi -f a843a903ac21
#1570940491
cd ..
#1570940493
ll
#1570940498
cd traefik
#1570940509
docker build -t qmcgaw/ddns-updater --build-arg BASE_IMAGE_BUILDER=arm32v7/golang --build-arg BASE_IMAGE=arm32v7/alpine --build-arg GOARCH=arm --build-arg GOARM=7 https://github.com/qdm12/ddns-updater.git
#1570941024
dockup -d
#1570941037
code docker-compose.yml 
#1570941115
reload
#1570941119
dockup -d
#1570941148
docker ps
#1570941243
docker logs --tail 50 --follow --timestamps ddns-updater
#1570941285
docker ps
#1570941292
docker stop 0efed9f0af53
#1570941296
docker ps
#1570941309
cd ddns
#1570941310
ll
#1570941345
cd ..
#1570941346
ll
#1570941545
code docker-compose.yml 
#1570941983
dockup -d
#1570942003
code docker-compose.yml 
#1570942044
dockup -d
#1570942059
docker ps
#1570942135
docker stop 2c4855b28edf
#1570942144
code docker-compose.yml 
#1570942195
dockup -d
#1570942220
docker logs --tail 50 --follow --timestamps ddns-updater
#1570942567
docker stop ddns-updater
#1570942576
cd ddns/
#1570942580
code config.json 
#1570942658
dockup -d
#1570942673
docker logs --tail 50 --follow --timestamps ddns-updater
#1570943384
code config.json 
#1570943439
docker stop ddns-updater
#1570943445
cd ..
#1570943446
ll
#1570943453
code docker-compose.yml 
#1570944259
sudo mkdir -P shared
#1570944264
sudo mkdir -p shared
#1570944266
ll
#1570944281
cd shared/
#1570944290
code .htpasswd
#1570944319
ll
#1570944415
sudo chmod 775 .htpasswd 
#1570944416
ll
#1570944422
cd ..
#1570944513
code docker-compose.yml 
#1570944544
cd shared/
#1570944550
sudo chown -R bruce:bruce .htpasswd 
#1570944551
ll
#1570944553
cd ..
#1570944555
ll
#1570944562
sudo chown -R bruce:bruce shared/
#1570944620
sudo chmod 775 shared/
#1570944621
ll
#1570944663
code docker-compose.yml 
cd /etc
ll
#1570944943
cd shared/
#1570944948
code .htpasswd 
code environment 
#1570945024
cd ..
#1570945027
code docker-compose.yml 
code localtime 
#1570946433
code traefik.toml 
#1570946458
docker ps
#1570946467
dockup -d
#1570946484
reboot
docker ps
docker stop ddns-updater
docker images
cd /opt/traefik
dockup -d
docker stop plex
docker start plex
docker stop traefik 
~
docker system prune
docker images
docker ps
docker rmi 37b95552b92e
docker rmi 869393b1b381
docker rmi fff333dc0cce
docker rmi a843a903ac21
docker build -t qmcgaw/ddns-updater --build-arg BASE_IMAGE_BUILDER=arm32v7/golang --build-arg BASE_IMAGE=arm32v7/alpine --build-arg GOARCH=arm --build-arg GOARM=7 https://github.com/qdm12/ddns-updater.git
docker images
dockup -d
stopvpn
dockup -d
docker ps
code .bash_eternal_history 
docker logs --tail 50 --follow --timestamps ddns
ufw status
sudo ufw status
sudo ufw allow 8000
sudo ufw allow 8080
sudo ufw status
sudo ufw status -v
sudo ufw status numbered 
sudo ufw delete 30
sudo ufw delete 29
sudo ufw delete 15
sudo ufw delete 14
sudo ufw status
sudo lsof -i -P -n | grep LISTEN 
sudo ufw allow ssh
sudo ufw status numbered 
sudo ufw delete 26
sudo ufw delete 13
sudo ufw allow ssh
ll
sudo ufw status
sudo ufw disable
docker logs --tail 50 --follow --timestamps ddns
docker logs --tail 16 --follow --timestamps ddns
docker logs --tail 8 --follow --timestamps ddns
sudo ufw status numbered 
sudo ufw enable
sudo ufw status numbered 
sudo ufw delete 26
sudo ufw delete 13
sudo ufw status numbered 
sudo ufw allow 2048/tcp
sudo ufw status numbered 
sudo lsof -i -P -n | grep LISTEN
sudo ufw delete 1
sudo ufw status numbered 
sudo ufw delete 13
sudo ufw status numbered 
docker ps
docker stop traefik
dockup -d
reload
echo $TRAEFIK
dockup -d
cd /opt/traefik
ll
docker ps
docker stop ddns
docker stop plex
docker stop traefik 
dockdown 
dockup -d
docker network create web
stopvpn
docker network create web
dockup -d
docker pull oznu/cloudflare-ddns
docker pull oznu/cloudflare-ddns:armhf
docker images
docker rmi 3a7cee13d29f
clear
docker images
code docker-compose.yml 
docker ps
docker stop plex
docker stop ddns
docker stop traefik
cd /opt/traefik
dockdown
dockup -d
stopvpn
dockup -d
docker ps
docker images
ping mausma.us
docker ps
echo $CLOUDFLARE_API_KEY
echo $OPT_DIR
echo $OPS_EMAIL
code docker-compose.yml 
dockdown
dockdown --remove-orphans
docker images
stopvpn
dockup
code compose-archive.yml
code docker-compose.yml 
dockdown
dockup
code docker-compose.yml 
dockdown
dockup
code docker-compose.yml 
dockup
dockup -d
ping mausma.us
clear
sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
cd /opt/letsencrypt/
cd ..
ll
cd letsencrypt/
cd ..
sudo chown -R bruce:bruce letsencrypt/
cd letsencrypt/
sudo -H ./letsencrypt-auto certonly --standalone -d mausma.us -d www.mausma.us
update
upgrade
sudo apt-get install certbot
sudo certbot certonly --standalone
reload
dockstopall
docker ps
dockstop plex
dockstop traefik
dockstopall
docker ps
sudo certbot certonly --standalone
dockdown
dockup
dockdown
dockup -d
dockdown
cd ..
ll
cd /etc/
ll
cd /opt
ll
dockup -d
sudo apt-get update && apt-get install -y --no-install-recommends apt-utils
sudo su
upgrade
docker ps
docker stop d27691208b78
docker stop c3ad33350993
docker ps
docker images
docker rmi 9905b008c088
docker rmi -f 9905b008c088
docker stop 82a2f9b18945
docker stop d16ef3949794
docker system prune -a
docker images
ll
code docker-compose.yml 
sudo apt-get install certbot
sudo certbot certonly --standalone
dockup -d
docker network create web
dockup -d
docker ps
ll
code acme.json 
docker stop cfdns
docker stop traefik
dockdown
dockup -d
docker ps
cd traefik
code acme.json 
~
ll
cd code/
ll
sudo nano temp-certs.txt 
cd /media
ll
code docker-compose.yml 
~
ll
sudo blkid
sudo mount /dev/sdc2 64GB
cd 64GB/
ll
cd home/
ll
cd bruce/
ll
cd .ssh
ll
code authorized_keys 
cd ..
sudo cp -a .password-store/ ~/
code .bash_eternal_history 
ll
cd .password-store/
ll
cd Media/
ll
~
code .bash_eternal_history 
sudo apt-get install pass
pass
pass insert Admin/do-root
code .bash_eternal_history 
cd .password-store/
ll
cd ~
gpg --gen-key
code .gpg-id 
cd ..
pass insert Admin/do-root
pass Admin/do-root 
pass insert Admin/do-bruce
pass Admin/do-bruce
cd /etc/letsencrypt/
ll
cd live/
l
cd code
ll
sudo nano temp-certs.txt 
df -H
sudo su
docker ps
htop
cd /opt/traefik
ll
code docker-compose.yml 
stopvpn
docker ps
~
code .bash_aliases 
code ~/.bash_history
reload
ali
qk
ali
reload
note
ali
reload
ali
~\
~
ll
sudo chown -R bruce:bruce .bash_aliases 
reload
ali
note
ll
note
docker ps
cd /opt/traefik
ll
code traefik.toml 
cd /etc/triggerhappy/
cd ..
ll
cd ..
cd opt/
cd traefik
touch access.log
touch traefik.log
ll
code traefik.toml 
code traefik.log 
docker stop traefik
docker-compose up -d
ll
sudo chmod 755 traefik.log 
ll
sudo chmod 644 traefik.log 
ll
sudo chmod 664 traefik.log 
ll
sudo chmod 664 access.log 
sudo chmod 775 traefik.toml 
ll
cd shared/
ll
docker stop traefik
docker-compose up -d
docker ps
cd ..
ll
code traefik.toml 
~
touch .nanorc
sudo nano .nanorc 
code docker-compose.yml 
stopvpn
cd /opt/traefik
ll
note
code docker-compose.yml 
sudo chmod 755 /opt/traefik
docker stop traefik
docker-compose up -d
ll
code docker-compose.yml 
sudo reboot
stopvpn
cd /opt/traefik
cd ..
ll
cd traefik
ll
note
ali
ls
ali
ll
df -H
cd /media
ls
sudo mkdir 8TB
ll
code .bash_eternal_history 
df -H
blkid
sudo blkid
sudo df -H
sudo umount /dev/sdg
df -H
blkid
sudo mount /dev/sdg1 /media/8TB
blkid
sudo smartctl -d sat -a /dev/sdg1
man smartctl
sudo apt-get install smartmontools 
man smartctl
sudo smartctl -d sat -a /dev/sdg1
sudo smartctl -d sat -t short /dev/sda2
sudo smartctl -d sat -t short /dev/sdg1
sudo smartctl -d sat -a /dev/sdg1
sudo umount /dev/sdg1
cd /media
ll
cd ~
man ntfs
man ntfs-3g
df-h
df -H
blkid
df -H
blkid
cd /etc
code fstab
ll
blkid|grep -i ntfs|sed 's/.*UUID="//g'|cut -d"\"" -f1|awk '{print "UUID="$1" /media/16TB ntfs-3g permissions,auto 0 0"}'
ll
sudo mkdir 16TB
ll
sudo chmod 770 16TB
ll
sudo chmod 777 16TB
ll
cd /etc
code group
code passwd
cd /
ll
mount /disks/16TB
sudo mount /disks/16TB
cd disks
ll
cd 16TB/
ll
service --status-all | grep plex
service --status-all
systemctl | grep running
systemctl status plexmediaserver
sudo systemctl status plexmediaserver
docker ps
docker stop 2dd2148d9a72
docker ps
cd /media/
ll
sudo rm -rf 16TB/
cd 1TB/
ll
code $UGM
code '$UGM'
rm '$UGM'
ll
cd _archive/
ll
cd ..
ll
cd Downloads/
ll
cd ..
ll
mkdir Movies
ll
chown -R bruce:bruce Movies/
ll
sudo chown -R bruce:bruce Movies
ll
cd Movies/
ll
cd The\ Lion\ King/
cd ..
cd The\ Lego\ Movie/
ll
cd /disks/
cd 16TB/
cd Movies
ll
cd Zombieland/
ll
cd ..
ll
cp -Rfv /media/1TB/Movies /disks/16TB/
cp -Rfv /media/1TB/Downloads /disks/16TB/
cp -Rfv /media/1TB/Plex /disks/16TB/
cp -Rfv /media/1TB/Transcoder /disks/16TB/
cp -Rfv /media/1TB/TV\ Shows/ /disks/16TB/
cp -Rfv /media/1TB/_archive/ /disks/16TB/
ll
docker-compose up -d
cd ~
ll
cd /etc
ll
cd docker/
ll
cd /opt
ll
cd traefik
ll
docker-compose up -d
docker ps
code .bash_eternal_history 
sudo sh
htop
sudo blkid
cd /etc
code fstab
man ntfs-3g
df-h
df -H
sudo parted --list
sudo mount /disks/16TB
ll
sudo parted --list
df -H
sudo blkid
man ntfs-3g
man gdisk
gdisk /dev/sdb1
sudo gdisk /dev/sdb1
cd /etc
code fstab
sudo mount /disks/16TB
cd /disks/
ll
cd 16TB/
ll
cd /opt/traefik
code docker-compose.yml 
docker-compose up -d
docker ps
docker stop a6a7241cd5fe
docker ps
docker-compose up -d
docker ps
sudo blkid
cd /opt/traefik
code docker-compose.yml 
cd /etc
code fstab
docker ps
docker stop a6a7241cd5fe
cd /opt/traefik
docker ps
docker-compose up -d
cd ~
sudo blkid
code docker-compose.yml 
df -H
fdisk -l
sudo fdisk -l
cd /etc
code fstab
sudo fdisk -l
df -H
sudo blkid
cd /disks
ll
cd 16TB/
ll
cd /media/
cd 1TB/
ll
cd ..
cd /disks/
sudo chown -R bruce:bruce 16TB/
cd 16TB/
ll
find . -name '.DS_Store' -type f -delete
cd Movies/
ll
cd 'TRON Legacy'/
ll
cd ..
cd Zombieland/
ll
cd ..
cd Venom/
ll
cd ..
cd Twister/
ll
cd ..
..
cd..
cd ..
cd /media/
cd 1TB/
find . -name '.DS_Store' -type f -delete
cd ..
cd ~
ll
sudo mount /disks/16TB
ll
cd 16TB/
ll
cd Movies/
ll
cd ..
rm -rf 16TB/
ll
df -h
sudo blkid
sudo mkdir 16TB
sudo chmod 777 16TB
sudo parted --list
sudo chown -R bruce:bruce 16TB
cd /etc
code fstab
df -h
sudo blkid
code .bash_eternal_history 
uname -a
fusermount -u nonexistent
cd /etc
cd ~
update
code fstab
ali
update
upgrade
autoremove
ali
raspiconfig
raspi
config
sudo reboot
update
sudo apt-get install samba samba-common-bin
sudo /etc/samba/smb.conf 
sudo reboot
sudo /etc/samba/smb.conf
cd /etc
ll
cd samba/
ll
sudo code /etc/samba/smb.conf
cd ~
ll
sudo nano .bash_aliases 
reload
code
cd /etc/samba/
ll
code smb.conf 
sudo /etc/init.d/ samba restart
cd /etc/init.d/
ll
sudo /etc/init.d/ samba-ad-dc restart
ls -l /etc/init.d
cd ~
ll
code .bashrc 
pip man
pip
pip install scrapy
sudo apt-get install libpcap-dev libpq-dev
pip install scrapy
apt-get build-dep -y lxml
sudo apt-get build-dep -y lxml
cd /etc
cd apt/
ll
cd sources.list.d/
ll
code raspi.list 
htop
cat /etc/apt/sources.list | grep deb-src
sudo apt-get build-dep -y lxml
update
upgrade
sudo apt-get build-dep -y lxml
pip install scrapy
ll
code .bashrc
code .bash_aliases 
code .profile 
echo $path
echo $PATH
PATH=$PATH:~/.local/bin
echo $PATH
code sources.list
clear
ll
cd code
ll
cd scripts/
ll
cd ..
ll
mkdir projects
scrapy startproject tutorial
echo $PATH
reload
echo $PATH
cd ..
ll
code .bash_eternal_history 
PATH=$PATH:~/.local/bin
echo $PATH
cd code
cd projects/
scrapy startproject tutorial
ll
cd tutorial/
ll
cd tutorial/
ll
cd spiders/
ll
code quotes_spider.py
cd ..
ll
scrapy crawl quotes
ll
cd tutorial/
ll
code items.py 
scrapy shell 'http://quotes.toscrape.com/page/1/'
scrapy shell 'http://quotes.toscrape.com'
ll
ll
cd ..
ll
cd tutorial/
cd spiders/
ll
scrapy shell 'http://quotes.toscrape.com'
scrapy crawl quotes -o quotes.json
cd ..
ll
cd ..
ll
cd tutorial/
ll
cd spiders/
ll
code quotes_spider.py
cd ..
scrapy crawl quotes -o quotes.json
scrapy crawl quotes
scrapy crawl quotes
ll
code quotes.json 
scrapy crawl quotes -o quotes.jl
code quotes.jl 
scrapy crawl quotes
cd ..
ll
mkdir web
cd web
cd ..
rm -rf web
mkdir web-test
cd web-test/
npm init
npm upgrade
npm help
npm v
node -v
npm -v
npm install -g n
sudo npm install -g n
n
sudo npm cache clean -f
sudo n stable
node -v
n ls
$n
n
npm install npm@latest -g
brew uninstall --force node
sudo apt-get install build-essential curl file git
sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
PATH=$PATH:/home/linuxbrew/.linuxbrew/bin
test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
cd ~
ll
echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
code .profile 
brew install hello
brew uninstall --force node
cd /usr/local/lib
ll
sudo rm -rf /usr/local/lib/node_modules
cd ~
ll
sudo rm -rf ~/.npm
brew uninstall --force node
brew install node
ll
node -v
brew update
echo $PATH
echo $NODE_PATH
npm -v
npm install
update
sudo apt install npm
nodejs --version
ll
sudo npm uninstall npm -g
sudo rm -rf /usr/local/lib/node_modules
sudo rm -rf ~/.npm
brew uninstall --force node
cd /users
xit
exit
:
:exit
:q

cd /users
cd /
ll
cd home
ll
cd linuxbrew/
ll
cd .linuxbrew/
ll
cd ..
cd ~
brew install nvm
mkdir ~/.nvm
code .profile 
rm -rf nvm
sudo rm -rf /usr/local/lib/
cd /usr/local/lib
ll
brew
brew list
brew uninstall nvm
cd ..
ll
cd web-test/
node -v
cd ~
sudo apt install npm
npm -v
brew reinstall npm
cd home
cd /home
ll
echo $PATH
echo $PATH
echo $PATH
reload
echo $PATH
reload
echo $PATH
brew reinstall npm
node -v
npm -v
scrapy shell 'https://www.liaisonedu.com/sample-product-page-wistia-embed/'
node -v
npm -v
brew link --overwrite node
brew link node
which -a npm
which -a node
sudo apt-get --purge remove node
sudo apt-get --purge remove nodejs-legacy
sudo apt-get --purge remove nodejs
which -a npm
which -a node
sudo apt-get remove node
sudo apt autoremove
which -a node
autoremove
ll
cd /usr/local
ll
cd bin
ll
rm n
sudo rm n
ll
sudo rm npm
sudo rm npx
cd nod
cd node
sudo rm node
ll
cd ..
ll
cd n
ll
cd versions/
ll
cd ..
sudo rm -rf n
cd share/
ll
cd man/
ll
cd man1/
ll
sudo rm node.1 
cd ..
cd lib
ll
cd ~
ll
sudo rm -rf .nvm
cd /opt
ll
cd /
;;
ll
cd opt/
ll
cd /usr/local
ll
cd bin
ll
which -a node
ll
code .bashrc 
sudo apt update
apt list --upgradable
upgrade
update
autoremove
sudo apt install nodejs npm
nodejs --version
node -v
which -a node
npm -v
cd code
cd projects/
ll
cd web-test/
ll
rm package.json 
npm init
cd ~
ll
cd code
cd projects/
cd web-test/
ll
sudo npm uninstall npm -g
npm -v
cd /usr/local
ll
cd bin
ll
cd ..
cd lib
ll
cd ..
rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*
cd ..
cd bin
ll
sudo apt-get purge --auto-remove nodejs
brew -v
brew uninstall --force node
sudo apt-get update
curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
sudo apt-get install -y nodejs
node -v
npm -v
cd usr/local
cd /usr/local
ll
cd bin/
ll
cd ..
cd ~
which -a node
code .profile 
cd code
cd projects/
cd web-test/
npm init
ll
node app
node index
cd ..
cd tutorial/
ll
cd ..
cd web-test/
code edit.html
ll
cd ..
cd tutorial/
ll
rm quotes-1.html 
rm quotes-2.html 
rm quotes.jl 
rm quotes.json 
rm quotes-sample-product-page-wistia-embed.html 
ll
cd tutorial/
ll
cd spiders/
ll
code quotes_spider.py
cd ..
scrapy crawl quotes -o lessons.json
ll
scrapy shell 'http://127.0.0.1:9000/edit.html'
scrapy crawl quotes -o lessons.json
ll
code lessons.json
scrapy crawl quotes -o lessons.json
ll
scrapy crawl quotes -o lessons.json
ll
scrapy crawl quotes -o lessons.json
ll
scrapy crawl quotes -o lessons.json
ll
scrapy crawl quotes -o lessons.json
startvpn
ll
cd tutorial/
ll
cd spiders/
ll
rm quotes_spider.pyc 
ll
cd ..
ll
cd ..
ll
scrapy crawl lessons -o lessons.json
code lessons.json 
rm lessons-a.json 
ll
code embed_spider.py
code lessons.json 
stopvpn
startvpn
ll
code lessons_spider.py
scrapy shell 'http://127.0.0.1:9000/edit.html'
scrapy crawl loginWT -o login.json
ll
stopvpn
startvpn
cd ~
ll
cd Downloads/
ll
code learning.warriortrading.com.har 
ll
code learning.warriortrading2.com.har
code learning.warriortrading.com2.har 
code learning.warriortrading.com3.har 
scrapy shell 'https://www.warriortrading.com/login-member'
scrapy crawl loginWT
ll
scrapy shell 'https://fast.wistia.net/embed/iframe/h6hwc2fyr2'
code lessonsA.json 
scrapy crawl wtvideo -o wtfiles.json -t json
scrapy crawl wtvideo -o wtfiles.json
ll
scrapy crawl wtvideo -o wtfiles.json -t json
scrapy crawl wtvideo
scrapy crawl wtvideo -o wtfiles.json -t json
scrapy crawl wtvideo
cd code
cd projects/
cd tutorial/
ll
dc ~
cd ~
ll
cd tutorial/
ll
cd spiders/
ll
code wt_spider.py
code .bash_eternal_history 
update
upgrade
autoremove
update
upgrade
reboot
code ali
sudo reboot
ali
blkid
df -H
sudo df -H
sudo blkid
lsblk
gdisk man
sudo gdisk /dev/sdb
gdisk -l
fdisk -l
sudo fdisk -l
sudo -l /dev/sdb
sudo fdisk -l /dev/sdb
sudo gdisk /dev/sdb
sudo mkfs.ntfs -f /dev/sdb1
sudo -l /dev/sdb
lsblk
sudo blkid
code new
sudo df -H
sudo blkid
blkid
ll
cd /disks/
ll
cd /media/
ll
cd 1TB/
cd bruce/
ll
cd OWC\ 1TB/
ll
cd /disks/
ll
cd 16TB/
ll
cd ..
sudo parted --list
sudo chown -R bruce:bruce 16TB
ll
sudo umount 16TB
code new
cd /disks/
sudo chown -R bruce:bruce 16TB
ll
code new
sudo parted --list
sudo blkid
lsblk
sudo df -H
cd /
ll
code new
cd /media/
ll
cp -Rfv /media/1TB/Plex /disks/16TB/
cp -Rfv /media/1TB/Transcoder /disks/16TB/
cp -Rfv /media/1TB/TV\ Shows/ /disks/16TB/
cd /disks
ll
cd 16TB/
ll
cd Movies/
ll
cd ..
rm -rf Movies/
ll
cd ~
ll
cd /opt/traefik
ll
dock
dockstop 4aaa30c43df2
dock
dockup
cd /opt/traefik
ll
dock
ll
dockdown
dockdown --remove-orphans 
dock
cd /disks
ll
cd 16TB/
ll
cd ..
sudo chown -R bruce:bruce 16TB
cd 16TB/
ll
cd Plex/
ll
cd Library
ll
cd Application\ Support/
;;
ll
cd Plex\ Media\ Server/
ll
cd ..
..
grep ^"$USER" /etc/group
id -u
id -g
ll
cd /
ll
cd etc
ll
code environment 
code docker-compose.yml 
dockup
dock
cd /disks/
cd 16TB/
ll
cd ..
ll
lsblk
df -H
blkid
sudo blkid
cd 16TB/
ll
cd Plex/
ll
cd Library
ali
docker images ls
docker images
dockerstop
dockstop
dockstopall
dock
docker pull linuxserver/plex
docker stop plex
docker rm plex
dockup
cd /etc/triggerhappy/
cd /opt/traefik
dock
docker image prune
dockup
dockup -d
..
ll
cd /media/
ll
cd 1TB/
ll
cd Downloads/
ll
cd ..
ll
cp -Rfv /media/1TB/Movies /disks/16TB/
cd Downloads/
ll
cd completed/
ll
cd ..
cp -Rfv /media/1TB/Downloads /disks/16TB/
ll
cd _archive/
ll
cp -Rfv /media/1TB/_archive /disks/16TB/
ll
code
dockdown -d
dockdown
dockup -d
code
lsblk
df -H
sudo blkid
dock
cd /disks/
ll
cd br
cd 16TB/
ll
cd Movies/
ll
code
cd /opt/traefik
docker-compose pull
dockdown
docker image prune
code docker-compose.yml 
docker image prune -a
docker container prune
docker-compose pull
docker-compose up -d
docker image prune
code 
cd /disks/16TB/Movies/
ll
cd Tigger/
ll
cd ..
cd Plex/
cd /etc
ll
cd default/
ll
code plexmediaserver 
sudo addgroup plex bruce
sudo addgroup bruce plex
code /etc/group
code /etc/passwd
cd /
ll
cd etc/
code environment 
id -u plex
id -u Plex
code passwd
code group
code /etc/default/plexmediaserver 
id -g Plex
id -g plex
cd /var/lib/plexmediaserver
cd /var/lib/
ll
sudo adduser bruce plex
code 
cd ~
clear
lsblk
sudo umount sda
cd /disks
sudo umount 16TB
ll
cd 16TB
ll
dpkg -r plexmediaserver
sudo dpkg -r plexmediaserver
sudo apt-get remove plexmediaserver
sudo dpkg --list
sudo apt-get remove "plexmediaserver"
autoremove
sudo apt-get install plexmediaserver
update
upgrade
sudo dpkg --force-all --force-remove-reinstreq -P plexmediaserver
autoremove
sudo reboot
sudo mv /etc/init.d/plexmediaserver /tmp
cd /var/lib/
ll
cd /etc/default/
ll
userdel plex
sudo userdel plex
find . -name '*plex*' -exec rm -f {} \;
$(find . | grep plex)
find . -name "*plex*" -exec grep -H 'XYZ' {} +
find . -name "*plexmediaserver*" -exec grep -H 'XYZ' {} +
umask
code /etc/passwd
cd /opt/traefik
dockerstop
dockstop
dock
dockstop b27a17b15fd4
docker-compose up -d plex
docker image prune
cd /disks/
kk
cd 16TB/
ll
cd Movies/
ll
cd Twister/
ll
..
ll
dock
dockstop b27a17b15fd4
dockstop 001191c990bf
docker system prune -a
docker-compose pull plex
docker-compose up -d plex
code 
cd /disks/
kk
ll
cd 16TB/
ll
cd /opt/traefik
dock
dockstop d6fd4e569333
docker-compose up -d plex
code 
cd /disks/
ll
cd 16TB/
ll
cd /opt/traefik
dock
dockstop d6fd4e569333
docker-compose up -d plex
dock
docker restart d6fd4e569333
cd /opt/traefik
dock
dockstop d6fd4e569333
docker-compose up -d plex
cd /etc/sudoers.d/
ll
code 010_defaults-timeout 
code 010_bruce-nopasswd 
cd ~
ll
cd .ssh
ll
code authorized_keys 
ll
cd /disks/
ll
cd 16TB/
ll
cd 'TV Shows'/
ll
cd 'Band of Brothers'/
ll
lsblk
sudo hdparm -Tt /dev/sda
sudo apt-get install hdparm
ping google.com
vpnstop
stopvpn
htop
ping google.com
sudo apt-get install hdparm
sudo hdparm -Tt /dev/sda
dmesg
usb-devices
lsblk
sudo hdparm -Tt /dev/sda
sudo gufw
sudo ufw
sudo ufw status
sudo ufw allow samba
sudo ufw allow CUPS
sudo ufw allow cups
sudo ufw status
code /etc/default/ufw
sudo ufw app list
sudo service smbd status
sudo smbpasswd -a bruce
cd /etc/samba/
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak 
code smb.conf
sudo service smbd restart
sudo service smbd status
sudo /etc/init.d/smbd restart
sudo service smbd status
sudo service smbd restart
sudo service smbd status
sudo service smbd restart
hostname -I
config
code
dock
docker restart 91cede89254c
sudo service smbd status
code 
sudo service smbd restart
docker restart 91cede89254c
dock
cd /disks/16TB/
ll
rm -rf Transcoder
ll
cd _archive/
ll
iperf -s
sudo apt-get install iperf
iperf -s
reset
sudo ufw app list
sudo ufw status
sudo ufw allow 5001
iperf -s
hostname -I
iperf -v
sudo apt-get remove iperf
sudo apt-get remove iperf3 libiperf0
wget https://iperf.fr/download/ubuntu/libiperf0_3.1.3-1_i386.deb
wget https://iperf.fr/download/ubuntu/iperf3_3.1.3-1_i386.deb
sudo dpkg -i libiperf0_3.1.3-1_i386.deb iperf3_3.1.3-1_i386.deb
rm libiperf0_3.1.3-1_i386.deb iperf3_3.1.3-1_i386.deb
ll
sudo apt-get install iperf3
reset
iperf3 -v
iperf -v
sudo ufw status
sudo ufw status numbered
sudo ufw delete 14
sudo ufw delete 28
sudo ufw delete 14
sudo ufw allow 5201
iperf3 -s
sudo service smbd restart
sudo ufw disable
sudo ufw enable
sudo service smbd restart
sudo service smbd status
sudo ufw status
ll
ping 192.168.1.101
cd ~
ll
code .bashrc
ll
htop
cd ..
ll
cd Movies/
ll
cd 'The Grand Budapest Hotel'/
ll
dock
docker restart 91cede89254c
reboot
htop
code /etc/samba/smb.conf
dock
docker restart 91cede89254c
df -H
sudp apt update
sudo apt update
upgrade
sudo apt install ffmpeg
ffmpeg -version
ffmpeg -encoders
cd /Disks
cd /disks
cd 16TB/
ll
rm .DS_Store 
ll
cd Downloads/
ll
cd completed/
ll
ffmpeg -i input.ts -c:v libx264 -c:a aac output.mp4
ffmpeg -i 'Radiohead - Glastonbury 2017.ts' -c:v libx264 -c:a aac output.mp4
ll
sudo mv output.mp4 'Radiohead - Glastonbury 2017.mp4' 
ll
mkdir 'Radiohead Glastonbury 2017'
ll
sudo mv 'Radiohead - Glastonbury 2017.mp4' 'Radiohead Glastonbury 2017'/
ll
sudo mv 'Radiohead Glastonbury 2017' /disks/16TB/Movies/
update
upgrade
ll
git init
touch .gitignore
code .gitignore
g status
git satus
git status
nvm
ll
ls
ls -la
ls -lat
ls -t
ls -l
ls -lat
sudo nano .bash_logout 
ll
rm -rf .git
ll
rm .gitignore 
ll
cd Downloads/
ll
cd /disks/
ll
cd 16TB/
ll
cd Downloads/
ll
cd completed/
ll
cd ~/Downloads/
ll
rm 'Radiohead - Glastonbury 2017.ts' 
ll
mkdir debian-dotfiles-backup
ll
cd ..
ll
cp ~/.bash_aliases ~/Downloads/debian-dotfiles-backup/
cd ~/Downloads/
cd debian-dotfiles-backup/
ll
cd ~
cp ~/.bash_eternal_history ~/Downloads/debian-dotfiles-backup/
cp ~/.bash_logout ~/Downloads/debian-dotfiles-backup/
cp ~/.bashrc ~/Downloads/debian-dotfiles-backup/
cp ~/.profile ~/Downloads/debian-dotfiles-backup/
sudo nano .dmrc 
cd .config/
ll
cd ..
ll
cd code
ll
mkdir github
cd github/
git clone https://github.com/abbott/dotfiles.git
cd ~
ssh-keygen
cd .ssh
ll
cd ~/code
ll
cd github/
ll
git clone https://github.com/abbott/dotfiles.git ~/code/github/dotfiles
cd ~
reload
git clone git@github.com:abbott/dotfiles.git ~/code/github/dotfiles
cd code/
cd github/
ll
cd dotfiles/
ll
git status
git add -A
git status
git add -A
git commit -a -m "modified .aliases and README" --no-verify
cp .gitconfig ~/
cd ~
ll
cd code/
ll
cd github/
reload
ll
cd dotfiles/
ll
git commit -a -m "modified .aliases and README" --no-verify
sudo apt-get install GnuPG
sudo apt-get install gnupg
gpg
cd /
ll
cd opt/
ll
cd ..
cd etc/
ll
cd ..
ll
cd bin/
ll
cd ..
ll
cd usr/
ll
cd bin/
ll
cd ..
ll
cd local/
ll
cd bin/
ll
ln -sv /usr/bin/gpg .
sudo ln -sv /usr/bin/gpg .
ll
reload
git commit -a -m "modified .aliases and README" --no-verify
cd ..
cd bin/
ll
gpg2
brew
brew list
gpg man
gpg --version
echo "test" | gpg --clearsign
export GPG_TTY=$(tty)
reload
echo "test" | gpg --clearsign
reload
git commit -a -m "modified .aliases and README" --no-verify
reload
git commit -a -m "modified .aliases and README" --no-verify
echo $GPG_TTY
echo $(tty)
htop
brew install pinentry
sudo apt-get install m4
brew list
reload
git commit -a -m "modified .aliases and README" --no-verify
git push -u origin master
cd ~
ll
cp .bash_logout ~/code/github/dotfiles/
cd code
cd github/
cd dotfiles/
ll
g status
git status
git add -A
git commit -a -m "renamed .alias, organized content" --no-verify
git push -u origin master
